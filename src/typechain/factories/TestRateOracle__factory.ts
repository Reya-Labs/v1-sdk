/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRateOracle,
  TestRateOracleInterface,
} from "../TestRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextOld",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "IncreaserateCardinalityNext",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferWrite",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAfterOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBeforeOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestObservedRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "testGetRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "testGrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "queriedTime",
        type: "uint32",
      },
    ],
    name: "testObserveSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingYieldBearingProtocolID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002f5b38038062002f5b83398101604081905262000034916200034a565b81818062000042336200016d565b60601b6001600160601b0319166080526201000380546001600160a01b0319166001600160a01b038416179055600062000087620001bd602090811b62000c2717901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b158015620000d557600080fd5b505afa158015620000ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000110919062000381565b90506200012f82826004620001cf60201b62000c37179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff0000191617620100009390921692909202179055506200039a945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001ca4262000254565b905090565b600080620001de84846200029e565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b600063ffffffff8211156200029a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064015b60405180910390fd5b5090565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620002fd5760405162461bcd60e51b815260040162000291906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b80516001600160a01b03811681146200034557600080fd5b919050565b600080604083850312156200035d578182fd5b62000368836200032d565b915062000378602084016200032d565b90509250929050565b60006020828403121562000393578081fd5b5051919050565b60805160601c612b86620003d56000396000818161031f015281816109f8015281816112200152818161161601526116d70152612b866000f3fe608060405234801561001057600080fd5b506004361061018b5760003560e01c806304a2e89b146101905780631195082e146101ae5780631a686502146101d9578063252c09d71461020657806325f258dd1461024557806332148f67146102585780633c155bd51461026d5780633eaf5d9f1461029557806341453528146102be57806354124c64146102d157806356da9775146102e45780636e035c05146103075780636f307dc31461031a578063715018a61461034e578063770a7d6d146103565780637aa4db13146103615780637cf2cc9f146103695780637f0ca7ab146103725780638da5cb5b1461037d57806393556dbd1461038557806395f3e60514610398578063a223ee0d146103b9578063b34bd683146103c4578063bdb0509214610406578063c58b59b814610419578063c7db359b1461042c578063dd9d05d11461044f578063e16e189e14610469578063e353020c1461047c578063e9b69c0d1461048f578063e9d337b8146104a2578063f2fde38b146104b7578063f739670c146104ca575b600080fd5b61019b620100075481565b6040519081526020015b60405180910390f35b61019b6101bc3660046128f2565b600160209081526000928352604080842090915290825290205481565b62010004546101ee906001600160801b031681565b6040516001600160801b0390911681526020016101a5565b61021961021436600461285c565b6104dd565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101a5565b61019b61025336600461288c565b610517565b61026b61026636600461283a565b610585565b005b61028061027b36600461283a565b610611565b604080519283526020830191909152016101a5565b62010003546102ab90600160a01b900460020b81565b60405160029190910b81526020016101a5565b61019b6102cc36600461288c565b61068c565b61019b6102df3660046128ad565b6106a0565b6102f76102f236600461288c565b6106f7565b60405190151581526020016101a5565b61019b61031536600461288c565b61075d565b6103417f000000000000000000000000000000000000000000000000000000000000000081565b6040516101a5919061294e565b61026b610770565b61019b620100055481565b61026b6107b4565b61019b60025481565b61019b620100065481565b610341610801565b61019b61039336600461288c565b610810565b6103ab6103a63660046128d8565b6108a0565b6040516101a59291906129ea565b61019b620100085481565b60035461ffff80821691620100008104821691600160201b909104165b6040805161ffff948516815292841660208401529216918101919091526060016101a5565b61026b61041436600461285c565b6108d8565b61019b6104273660046128d8565b610942565b6003546103e19061ffff80821691620100008104821691600160201b9091041683565b610457600181565b60405160ff90911681526020016101a5565b61026b61047736600461283a565b610974565b61019b61048a36600461288c565b6109b3565b61026b61049d3660046128d8565b6109cd565b6201000354610341906001600160a01b031681565b61026b6104c5366004612813565b610abe565b61019b6104d836600461288c565b610b5e565b60048161ffff81106104ee57600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806105248484610ca8565b9092509050801561057d57600061054261053d86610dd1565b610ddf565b9050600061055261053d86610dd1565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006105a160048385610e23565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461060c576040805161ffff8085168252831660208201527f1f0a33a4e18d81b29e729a440bc8de6a84b65d9fbdf81682d85c3a382296e55e910160405180910390a15b505050565b600080600060048461ffff1661ffff811061063c57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006106988383610ca8565b509392505050565b6000806106ac83610edf565b905060006106ba6001610ef6565b6106c49086612a2b565b905060006106d28284610f43565b905060006106df82610f82565b90506106eb8882610fde565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c00008261071e8584610fde565b9050600061072c8684610fde565b905081871115801561073e5750808710155b1561075057600194505050505061057f565b600094505050505061057f565b60006107698383611097565b9392505050565b33610779610801565b6001600160a01b0316146107a85760405162461bcd60e51b815260040161079f906129b5565b60405180910390fd5b6107b260006110fc565b565b6003546107d99061ffff80821691620100008104821691600160201b9091041661114c565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156108555760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b604482015260640161079f565b60006108618484610b5e565b9050600061086f8585612a99565b9050600061087c82610ef6565b9050600061088982610edf565b90506108958482611097565b979650505050505050565b6108a86127df565b6108b06127df565b6003546108cf90600490859061ffff8082169162010000900416611342565b91509150915091565b336108e1610801565b6001600160a01b0316146109075760405162461bcd60e51b815260040161079f906129b5565b60028190556040518181527f19ede2e51d1531988bc60742b8bb97134e9f3a1ec45cf7cf4ea09953f80b2ac59060200160405180910390a150565b600061096761094f610c27565b600354849061ffff8082169162010000900416611518565b6201000581905592915050565b60035461098f90600490600160201b900461ffff1683610e23565b6003805461ffff92909216600160201b0261ffff60201b1990921691909117905550565b60006109bf8383610b5e565b620100068190559392505050565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390610a20907f00000000000000000000000000000000000000000000000000000000000000009060040161294e565b60206040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190612874565b6003549091506000908190610a99906004908690869061ffff80821691620100009004166118b2565b6020918201516001600160d81b03908116620100075591015116620100085550505050565b33610ac7610801565b6001600160a01b031614610aed5760405162461bcd60e51b815260040161079f906129b5565b6001600160a01b038116610b525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079f565b610b5b816110fc565b50565b600081831415610b705750600061057f565b6000610b7a610c27565b90506000610b8785610ddf565b90506000610b9485610ddf565b600354909150600090610bb8908590859061ffff8082169162010000900416611518565b600354909150600090610bdc908690859061ffff8082169162010000900416611518565b905081811115610c1957610c0d610c08676765c793fa10079d601b1b610c028486611a80565b90611b54565b611b60565b9550505050505061057f565b60009550505050505061057f565b6000610c3242610ddf565b905090565b600080610c448484611bce565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b6000806000610cb961053d86610dd1565b90506000610cc961053d86610dd1565b905060008263ffffffff16118015610ce7575060008163ffffffff16115b610d1b5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b604482015260640161079f565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610d6d5763ffffffff8083166000908152600160209081526040808320938516835292905220549350610dc8565b8063ffffffff16610d7c610c27565b63ffffffff1610610da857610d9d8263ffffffff168263ffffffff16610b5e565b935060019250610dc8565b610dc58263ffffffff16610dba610c27565b63ffffffff16610b5e565b93505b50509250929050565b670de0b6b3a7640000900490565b600063ffffffff821115610e1f5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640161079f565b5090565b6000808361ffff1611610e5c5760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161079f565b8261ffff168261ffff1611610e72575081610769565b825b8261ffff168161ffff161015610ed6576001858261ffff1661ffff8110610eab57634e487b7160e01b600052603260045260246000fd5b01805463ffffffff191663ffffffff9290921691909117905580610ece81612acd565b915050610e74565b50909392505050565b600061057f826a1a1601fc4ea7109e000000611c46565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21821115610f3557604051633492ffd960e01b81526004810183905260240161079f565b50670de0b6b3a76400000290565b600082610f68578115610f57576000610f61565b670de0b6b3a76400005b905061057f565b610769610f7d610f7785611c5b565b84611d0b565b611d17565b600080610f93633b9aca0084612a57565b905082610fa4633b9aca0083612a43565b1460405180604001604052806002815260200161068760f31b8152509061057d5760405162461bcd60e51b815260040161079f9190612962565b6000821580610feb575081155b15610ff85750600061057f565b8161100f6002676765c793fa10079d601b1b612a43565b61101b90600019612a99565b6110259190612a43565b83111560405180604001604052806002815260200161068760f31b815250906110615760405162461bcd60e51b815260040161079f9190612962565b50676765c793fa10079d601b1b611079600282612a43565b6110838486612a57565b61108d9190612a2b565b6107699190612a43565b6000826110a65750600061057f565b60006110bb6110b56001610ef6565b84611c46565b905060006110dd856110cd6001610ef6565b6110d79190612a2b565b83610f43565b90506110e96001610ef6565b6110f39082612a99565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff811061117757634e487b7160e01b600052603260045260246000fd5b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060006111c1610c27565b9050816000015163ffffffff166002548263ffffffff166111e29190612a99565b10156111f5578686935093505050610ca0565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390611248907f00000000000000000000000000000000000000000000000000000000000000009060040161294e565b60206040518083038186803b15801561126057600080fd5b505afa158015611274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112989190612874565b9050806112b85760405163bd89c5af60e01b815260040160405180910390fd5b7f43bca372be3e74f9c236cf54450ec01eb2d011690a24a7402ddff4e41267e4476112e1611d5d565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161133360048984848b8b611d68565b94509450505050935093915050565b61134a6127df565b6113526127df565b600083611360866001612a05565b61136a9190612aef565b61ffff169050600060018561ffff16836113849190612a2b565b61138e9190612a99565b905060005b600261139f8385612a2b565b6113a99190612a43565b9050886113ba61ffff881683612b10565b61ffff81106113d957634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff161515918101829052955061143057611429816001612a2b565b9250611393565b8861ffff8716611441836001612a2b565b61144b9190612b10565b61ffff811061146a57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114d65750846000015163ffffffff168963ffffffff1611155b156114e1575061150c565b806114f8576114f1600183612a99565b9250611506565b611503826001612a2b565b93505b50611393565b50505094509492505050565b60008363ffffffff168563ffffffff16101561155c5760405162461bcd60e51b81526020600482015260036024820152624f4f4f60e81b604482015260640161079f565b8363ffffffff168563ffffffff1614156116ac576115786127df565b60048461ffff1661ffff811061159e57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509087161461169557620100035460405163d15e005360e01b81526001600160a01b039091169063d15e00539061163e907f00000000000000000000000000000000000000000000000000000000000000009060040161294e565b60206040518083038186803b15801561165657600080fd5b505afa15801561166a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168e9190612874565b91506116a6565b80602001516001600160d81b031691505b506118aa565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906116ff907f00000000000000000000000000000000000000000000000000000000000000009060040161294e565b60206040518083038186803b15801561171757600080fd5b505afa15801561172b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174f9190612874565b90506000806117626004888589896118b2565b91509150816000015163ffffffff168763ffffffff1614156117935781602001516001600160d81b031693506118a6565b805163ffffffff888116911614156117ba5780602001516001600160d81b031693506118a6565b600082602001516001600160d81b031682602001516001600160d81b03161115611822576000611813676765c793fa10079d601b1b610c0285602001516001600160d81b031687602001516001600160d81b0316611a80565b905061181e81611b60565b9150505b6000611853670de0b6b3a76400008551855161183e9190612ab0565b63ffffffff1661184e9190612a57565b610edf565b905060006118618383611097565b90506118a085602001516001600160d81b031682611884670de0b6b3a764000090565b8851611890908f612ab0565b63ffffffff166102df9190612a57565b96505050505b5050505b949350505050565b6118ba6127df565b6118c26127df565b868461ffff1661ffff81106118e757634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090871610611966578563ffffffff16826000015163ffffffff16141561195257611a76565b8161195d8787611bce565b91509150611a76565b8683611973866001612a05565b61197d9190612aef565b61ffff1661ffff81106119a057634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529250611a255760408051606081018252885463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80881691161115611a655760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015260640161079f565b611a7187878686611342565b915091505b9550959350505050565b604080518082019091526002815261035360f41b602082015260009082611aba5760405162461bcd60e51b815260040161079f9190612962565b506000611ac8600284612a43565b9050676765c793fa10079d601b1b611ae282600019612a99565b611aec9190612a43565b84111560405180604001604052806002815260200161068760f31b81525090611b285760405162461bcd60e51b815260040161079f9190612962565b508281611b40676765c793fa10079d601b1b87612a57565b611b4a9190612a2b565b6118aa9190612a43565b60006107698284612a99565b600080611b726002633b9aca00612a43565b90506000611b808483612a2b565b90508181101560405180604001604052806002815260200161343960f01b81525090611bbf5760405162461bcd60e51b815260040161079f9190612962565b506118aa633b9aca0082612a43565b611bd66127df565b6001600160d81b03821115611c165760405162461bcd60e51b815260040161079f906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061076983670de0b6b3a764000084611ecc565b6000670de0b6b3a7640000821015611c8957604051633621413760e21b81526004810183905260240161079f565b6000611c9e670de0b6b3a76400008404611fa8565b670de0b6b3a7640000808202935090915083821c90811415611cc1575050919050565b6706f05b59d3b200005b8015611d0357670de0b6b3a7640000828002049150671bc16d674ec800008210611cfb579283019260019190911c905b60011c611ccb565b505050919050565b6000610769838361208b565b6000680a688906bd8b0000008210611d4557604051634a4f26f160e01b81526004810183905260240161079f565b670de0b6b3a7640000604083901b046107698161214d565b6000610c3242610ef6565b6000806000888861ffff1661ffff8110611d9257634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611ded5787859250925050611ec1565b8461ffff168461ffff16118015611e155750611e0a600186612a76565b61ffff168861ffff16145b15611e2257839150611e26565b8491505b81611e32896001612a05565b611e3c9190612aef565b9250611e488787611bce565b898461ffff1661ffff8110611e6d57634e487b7160e01b600052603260045260246000fd5b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b600080806000198587098587029250828110838203039150508060001415611f1557838281611f0b57634e487b7160e01b600052601260045260246000fd5b0492505050610769565b838110611f3f57604051631dcf306360e21b8152600481018290526024810185905260440161079f565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611fc857608091821c91611fc59082612a2b565b90505b600160401b8210611fe657604091821c91611fe39082612a2b565b90505b600160201b821061200457602091821c916120019082612a2b565b90505b62010000821061202157601091821c9161201e9082612a2b565b90505b610100821061203d57600891821c9161203a9082612a2b565b90505b6010821061205857600491821c916120559082612a2b565b90505b6004821061207357600291821c916120709082612a2b565b90505b600282106120865761057f600182612a2b565b919050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106120cf5760405163698d9a0160e11b81526004810182905260240161079f565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826121095780670de0b6b3a764000085040194505050505061057f565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b82161561216d5768016a09e667f3bcc9090260401c5b6001603e1b821615612188576801306fe0a31b7152df0260401c5b6001603d1b8216156121a3576801172b83c7d517adce0260401c5b6001603c1b8216156121be5768010b5586cf9890f62a0260401c5b6001603b1b8216156121d9576801059b0d31585743ae0260401c5b6001603a1b8216156121f457680102c9a3e778060ee70260401c5b600160391b82161561220f5768010163da9fb33356d80260401c5b600160381b82161561222a57680100b1afa5abcbed610260401c5b600160371b8216156122455768010058c86da1c09ea20260401c5b600160361b821615612260576801002c605e2e8cec500260401c5b600160351b82161561227b57680100162f3904051fa10260401c5b600160341b821615612296576801000b175effdc76ba0260401c5b600160331b8216156122b157680100058ba01fb9f96d0260401c5b600160321b8216156122cc5768010002c5cc37da94920260401c5b600160311b8216156122e7576801000162e525ee05470260401c5b600160301b8216156123025768010000b17255775c040260401c5b6001602f1b82161561231d576801000058b91b5bc9ae0260401c5b6001602e1b82161561233857680100002c5c89d5ec6d0260401c5b6001602d1b8216156123535768010000162e43f4f8310260401c5b6001602c1b82161561236e57680100000b1721bcfc9a0260401c5b6001602b1b8216156123895768010000058b90cf1e6e0260401c5b6001602a1b8216156123a4576801000002c5c863b73f0260401c5b600160291b8216156123bf57680100000162e430e5a20260401c5b600160281b8216156123da576801000000b1721835510260401c5b600160271b8216156123f557680100000058b90c0b490260401c5b600160261b8216156124105768010000002c5c8601cc0260401c5b600160251b82161561242b576801000000162e42fff00260401c5b600160241b8216156124465768010000000b17217fbb0260401c5b600160231b821615612461576801000000058b90bfce0260401c5b600160221b82161561247c57680100000002c5c85fe30260401c5b600160211b8216156124975768010000000162e42ff10260401c5b600160201b8216156124b257680100000000b17217f80260401c5b63800000008216156124cd5768010000000058b90bfc0260401c5b63400000008216156124e8576801000000002c5c85fe0260401c5b632000000082161561250357680100000000162e42ff0260401c5b631000000082161561251e576801000000000b17217f0260401c5b630800000082161561253957680100000000058b90c00260401c5b63040000008216156125545768010000000002c5c8600260401c5b630200000082161561256f576801000000000162e4300260401c5b630100000082161561258a5768010000000000b172180260401c5b628000008216156125a4576801000000000058b90c0260401c5b624000008216156125be57680100000000002c5c860260401c5b622000008216156125d85768010000000000162e430260401c5b621000008216156125f257680100000000000b17210260401c5b6208000082161561260c5768010000000000058b910260401c5b62040000821615612626576801000000000002c5c80260401c5b6202000082161561264057680100000000000162e40260401c5b620100008216156126595761b172600160401b010260401c5b618000821615612671576158b9600160401b010260401c5b61400082161561268957612c5d600160401b010260401c5b6120008216156126a15761162e600160401b010260401c5b6110008216156126b957610b17600160401b010260401c5b6108008216156126d15761058c600160401b010260401c5b6104008216156126e9576102c6600160401b010260401c5b61020082161561270157610163600160401b010260401c5b6101008216156127185760b1600160401b010260401c5b608082161561272e576059600160401b010260401c5b604082161561274457602c600160401b010260401c5b602082161561275a576016600160401b010260401c5b601082161561277057600b600160401b010260401c5b6008821615612786576006600160401b010260401c5b600482161561279c576003600160401b010260401c5b60028216156127b2576001600160401b010260401c5b60018216156127c8576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff8116811461208657600080fd5b600060208284031215612824578081fd5b81356001600160a01b0381168114610769578182fd5b60006020828403121561284b578081fd5b813561ffff81168114610769578182fd5b60006020828403121561286d578081fd5b5035919050565b600060208284031215612885578081fd5b5051919050565b6000806040838503121561289e578081fd5b50508035926020909101359150565b6000806000606084860312156128c1578081fd5b505081359360208301359350604090920135919050565b6000602082840312156128e9578081fd5b610769826127ff565b60008060408385031215612904578182fd5b61290d836127ff565b915061291b602084016127ff565b90509250929050565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561298e57858101830151858201604001528201612972565b8181111561299f5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60c081016129f88285612924565b6107696060830184612924565b600061ffff808316818516808303821115612a2257612a22612b24565b01949350505050565b60008219821115612a3e57612a3e612b24565b500190565b600082612a5257612a52612b3a565b500490565b6000816000190483118215151615612a7157612a71612b24565b500290565b600061ffff83811690831681811015612a9157612a91612b24565b039392505050565b600082821015612aab57612aab612b24565b500390565b600063ffffffff83811690831681811015612a9157612a91612b24565b600061ffff80831681811415612ae557612ae5612b24565b6001019392505050565b600061ffff80841680612b0457612b04612b3a565b92169190910692915050565b600082612b1f57612b1f612b3a565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220c9e37c707d9ad5689c1de492b882760cc3a80606d60f885a79707aad7aa173f064736f6c63430008040033";

export class TestRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestRateOracle {
    return super.attach(address) as TestRateOracle;
  }
  connect(signer: Signer): TestRateOracle__factory {
    return super.connect(signer) as TestRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateOracleInterface {
    return new utils.Interface(_abi) as TestRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestRateOracle;
  }
}
