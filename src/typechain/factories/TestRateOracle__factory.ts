/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRateOracle,
  TestRateOracleInterface,
} from "../TestRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginRequirement",
        type: "uint256",
      },
    ],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAfterOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBeforeOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestObservedRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "testGetRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "testGrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "queriedTime",
        type: "uint32",
      },
    ],
    name: "testObserveSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002ed538038062002ed583398101604081905262000034916200032e565b81818062000042336200016d565b60601b6001600160601b0319166080526201000380546001600160a01b0319166001600160a01b038416179055600062000087620001bd602090811b62000c7f17901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b158015620000d557600080fd5b505afa158015620000ea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011091906200036c565b90506200012f82826004620001cf60201b62000c8f179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff0000191617620100009390921692909202179055506200039e945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001ca4262000254565b905090565b600080620001de84846200029f565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b8063ffffffff811681146200029a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064015b60405180910390fd5b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620002fe5760405162461bcd60e51b815260040162000291906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6000806040838503121562000341578182fd5b82516200034e8162000385565b6020840151909250620003618162000385565b809150509250929050565b6000602082840312156200037e578081fd5b5051919050565b6001600160a01b03811681146200039b57600080fd5b50565b60805160601c612afc620003d96000396000818161034401528181610a13015281816111ae015281816115d401526116950152612afc6000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806304a2e89b1461019b5780631195082e146101b95780631a686502146101e457806322ff656814610211578063252c09d71461022b57806325f258dd1461026a57806332148f671461027d5780633c155bd5146102925780633eaf5d9f146102ba57806341453528146102e357806354124c64146102f657806356da9775146103095780636e035c051461032c5780636f307dc31461033f578063715018a614610373578063770a7d6d1461037b5780637aa4db13146103865780637cf2cc9f1461038e5780637f0ca7ab146103975780638da5cb5b146103a257806393556dbd146103aa57806395f3e605146103bd578063a223ee0d146103de578063b34bd683146103e9578063bdb050921461042b578063c330c98d1461043e578063c58b59b81461044d578063c7db359b14610460578063e16e189e14610483578063e353020c14610496578063e9b69c0d146104a9578063e9d337b8146104bc578063f2fde38b146104d1578063f739670c146104e4575b600080fd5b6101a6620100075481565b6040519081526020015b60405180910390f35b6101a66101c7366004612868565b600160209081526000928352604080842090915290825290205481565b62010004546101f9906001600160801b031681565b6040516001600160801b0390911681526020016101b0565b610219600181565b60405160ff90911681526020016101b0565b61023e6102393660046127d2565b6104f7565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101b0565b6101a6610278366004612802565b610531565b61029061028b3660046127b0565b61059f565b005b6102a56102a03660046127b0565b610624565b604080519283526020830191909152016101b0565b62010003546102d090600160a01b900460020b81565b60405160029190910b81526020016101b0565b6101a66102f1366004612802565b61069f565b6101a6610304366004612823565b6106b3565b61031c610317366004612802565b610708565b60405190151581526020016101b0565b6101a661033a366004612802565b61076e565b6103667f000000000000000000000000000000000000000000000000000000000000000081565b6040516101b091906128c4565b610290610781565b6101a6620100055481565b6102906107c5565b6101a660025481565b6101a6620100065481565b610366610812565b6101a66103b8366004612802565b610821565b6103d06103cb36600461284e565b6108b1565b6040516101b0929190612960565b6101a6620100085481565b60035461ffff80821691620100008104821691600160201b909104165b6040805161ffff948516815292841660208401529216918101919091526060016101b0565b6102906104393660046127d2565b6108e9565b6101a6670de0b6b3a764000081565b6101a661045b36600461284e565b61095d565b6003546104069061ffff80821691620100008104821691600160201b9091041683565b6102906104913660046127b0565b61098f565b6101a66104a4366004612802565b6109ce565b6102906104b736600461284e565b6109e8565b6201000354610366906001600160a01b031681565b6102906104df366004612789565b610ad9565b6101a66104f2366004612802565b610b76565b60048161ffff811061050857600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061053e8484610d00565b9092509050801561059757600061055c61055786610e31565b610e3f565b9050600061056c61055786610e31565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006105bb60048385610e84565b6003805461ffff808416600160201b810261ffff60201b199093169290921790925591925083161461061f5760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff811061064f57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006106ab8383610d00565b509392505050565b6000806106bf83610f71565b905060006106d5670de0b6b3a7640000866129a1565b905060006106e38284610f88565b905060006106f082610fc7565b90506106fc8882610fd8565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c00008261072f8584610fd8565b9050600061073d8684610fd8565b905081871115801561074f5750808710155b15610761576001945050505050610599565b6000945050505050610599565b600061077a8383611027565b9392505050565b3361078a610812565b6001600160a01b0316146107b95760405162461bcd60e51b81526004016107b09061292b565b60405180910390fd5b6107c3600061108a565b565b6003546107ea9061ffff80821691620100008104821691600160201b909104166110da565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156108665760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016107b0565b60006108728484610b76565b905060006108808585612a0f565b9050600061088d826112d0565b9050600061089a82610f71565b90506108a68482611027565b979650505050505050565b6108b9612755565b6108c1612755565b6003546108e090600490859061ffff808216916201000090041661131d565b91509150915091565b336108f2610812565b6001600160a01b0316146109185760405162461bcd60e51b81526004016107b09061292b565b806002541461095a5760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b600061098261096a610c7f565b600354849061ffff80821691620100009004166114eb565b6201000581905592915050565b6003546109aa90600490600160201b900461ffff1683610e84565b6003805461ffff92909216600160201b0261ffff60201b1990921691909117905550565b60006109da8383610b76565b620100068190559392505050565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390610a3b907f0000000000000000000000000000000000000000000000000000000000000000906004016128c4565b60206040518083038186803b158015610a5357600080fd5b505afa158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b91906127ea565b6003549091506000908190610ab4906004908690869061ffff8082169162010000900416611870565b6020918201516001600160d81b03908116620100075591015116620100085550505050565b33610ae2610812565b6001600160a01b031614610b085760405162461bcd60e51b81526004016107b09061292b565b6001600160a01b038116610b6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b0565b61095a8161108a565b600081831115610bb45760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016107b0565b81831415610bc457506000610599565b6000610bce610c7f565b90506000610bdb85610e3f565b90506000610be885610e3f565b600354909150600090610c0c908590859061ffff80821691620100009004166114eb565b600354909150600090610c30908690859061ffff80821691620100009004166114eb565b905081811115610c71576000610c63610c5e676765c793fa10079d601b1b610c588587611a3e565b90611ac1565b611acd565b965061059995505050505050565b600095505050505050610599565b6000610c8a42610e3f565b905090565b600080610c9c8484611b49565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b6000806000610d1161055786610e31565b90506000610d2161055786610e31565b905060008263ffffffff16118015610d3f575060008163ffffffff16115b610d735760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016107b0565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610dc95763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610e28565b8063ffffffff16610dd8610c7f565b63ffffffff1610610e0457610df98263ffffffff168263ffffffff16610b76565b935060019250610e28565b610e218263ffffffff16610e16610c7f565b63ffffffff16610b76565b9350600192505b50509250929050565b670de0b6b3a7640000900490565b8063ffffffff81168114610e7f5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016107b0565b919050565b6000808361ffff1611610eee5760405162461bcd60e51b815260206004820152602c60248201527f4e65772073697a65206f66206f7261636c65206275666665722073686f756c6460448201526b20626520706f73697469766560a01b60648201526084016107b0565b8261ffff168261ffff1611610f0457508161077a565b825b8261ffff168161ffff161015610f68576001858261ffff1661ffff8110610f3d57634e487b7160e01b600052603260045260246000fd5b01805463ffffffff191663ffffffff9290921691909117905580610f6081612a43565b915050610f06565b50909392505050565b6000610599826a1a1601fc4ea7109e000000611bc1565b600082610fad578115610f9c576000610fa6565b670de0b6b3a76400005b9050610599565b61077a610fc2610fbc85611bd6565b84611c86565b611c92565b60008061077a633b9aca00846129cd565b6000821580610fe5575081155b15610ff257506000610599565b676765c793fa10079d601b1b6110096002826129b9565b61101384866129cd565b61101d91906129a1565b61077a91906129b9565b60008261103657506000610599565b600061105e6110588561104960016112d0565b61105391906129a1565b611bd6565b84611bc1565b9050600061106b82611c92565b905061107760016112d0565b6110819082612a0f565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff811061110557634e487b7160e01b600052603260045260246000fd5b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b909104161515908201529050600061114f610c7f565b9050816000015163ffffffff166002548263ffffffff166111709190612a0f565b1015611183578686935093505050610cf8565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906111d6907f0000000000000000000000000000000000000000000000000000000000000000906004016128c4565b60206040518083038186803b1580156111ee57600080fd5b505afa158015611202573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122691906127ea565b9050806112465760405163bd89c5af60e01b815260040160405180910390fd5b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa737561126f611cd8565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a16112c160048984848b8b611ce3565b94509450505050935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2182111561130f57604051633492ffd960e01b8152600481018390526024016107b0565b50670de0b6b3a76400000290565b611325612755565b61132d612755565b60008361133b86600161297b565b6113459190612a65565b61ffff169050600060018561ffff168361135f91906129a1565b6113699190612a0f565b905060005b600161137a83856129a1565b901c90508861138d61ffff881683612a86565b61ffff81106113ac57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181018290529550611403576113fc8160016129a1565b925061136e565b8861ffff87166114148360016129a1565b61141e9190612a86565b61ffff811061143d57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff16151592820192909252865190955089821691161180159081906114a95750846000015163ffffffff168963ffffffff1611155b156114b457506114df565b806114cb576114c4600183612a0f565b92506114d9565b6114d68260016129a1565b93505b5061136e565b50505094509492505050565b60008363ffffffff168563ffffffff16101561151a57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff16141561166a57611536612755565b60048461ffff1661ffff811061155c57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509087161461165357620100035460405163d15e005360e01b81526001600160a01b039091169063d15e0053906115fc907f0000000000000000000000000000000000000000000000000000000000000000906004016128c4565b60206040518083038186803b15801561161457600080fd5b505afa158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c91906127ea565b9150611664565b80602001516001600160d81b031691505b50611868565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906116bd907f0000000000000000000000000000000000000000000000000000000000000000906004016128c4565b60206040518083038186803b1580156116d557600080fd5b505afa1580156116e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170d91906127ea565b9050600080611720600488858989611870565b91509150816000015163ffffffff168763ffffffff1614156117515781602001516001600160d81b03169350611864565b805163ffffffff888116911614156117785780602001516001600160d81b03169350611864565b600082602001516001600160d81b031682602001516001600160d81b031611156117e05760006117d1676765c793fa10079d601b1b610c5885602001516001600160d81b031687602001516001600160d81b0316611a3e565b90506117dc81611acd565b9150505b6000611811670de0b6b3a7640000855185516117fc9190612a26565b63ffffffff1661180c91906129cd565b610f71565b9050600061181f8383611027565b905061185e85602001516001600160d81b031682611842670de0b6b3a764000090565b885161184e908f612a26565b63ffffffff1661030491906129cd565b96505050505b5050505b949350505050565b611878612755565b611880612755565b868461ffff1661ffff81106118a557634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090871610611924578563ffffffff16826000015163ffffffff16141561191057611a34565b8161191b8787611b49565b91509150611a34565b868361193186600161297b565b61193b9190612a65565b61ffff1661ffff811061195e57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506119e35760408051606081018252885463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80881691161115611a235760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016107b0565b611a2f8787868661131d565b915091505b9550959350505050565b60408051808201909152601081526f057616420526179204d6174683a2035360841b602082015260009082611a865760405162461bcd60e51b81526004016107b091906128d8565b506000611a946002846129b9565b90508281611aad676765c793fa10079d601b1b876129cd565b611ab791906129a1565b61186891906129b9565b600061077a8284612a0f565b600080611adf6002633b9aca006129b9565b90506000611aed84836129a1565b9050818110156040518060400160405280601081526020016f57616420526179204d6174683a20343960801b81525090611b3a5760405162461bcd60e51b81526004016107b091906128d8565b50611868633b9aca00826129b9565b611b51612755565b6001600160d81b03821115611b915760405162461bcd60e51b81526004016107b0906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061077a83670de0b6b3a764000084611e47565b6000670de0b6b3a7640000821015611c0457604051633621413760e21b8152600481018390526024016107b0565b6000611c19670de0b6b3a76400008404611f23565b670de0b6b3a7640000808202935090915083821c90811415611c3c575050919050565b6706f05b59d3b200005b8015611c7e57670de0b6b3a7640000828002049150671bc16d674ec800008210611c76579283019260019190911c905b60011c611c46565b505050919050565b600061077a8383612001565b6000680a688906bd8b0000008210611cc057604051634a4f26f160e01b8152600481018390526024016107b0565b670de0b6b3a7640000604083901b0461077a816120c3565b6000610c8a426112d0565b6000806000888861ffff1661ffff8110611d0d57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611d685787859250925050611e3c565b8461ffff168461ffff16118015611d905750611d856001866129ec565b61ffff168861ffff16145b15611d9d57839150611da1565b8491505b81611dad89600161297b565b611db79190612a65565b9250611dc38787611b49565b898461ffff1661ffff8110611de857634e487b7160e01b600052603260045260246000fd5b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b600080806000198587098587029250828110838203039150508060001415611e9057838281611e8657634e487b7160e01b600052601260045260246000fd5b049250505061077a565b838110611eba57604051631dcf306360e21b815260048101829052602481018590526044016107b0565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611f4357608091821c91611f4090826129a1565b90505b600160401b8210611f6157604091821c91611f5e90826129a1565b90505b600160201b8210611f7f57602091821c91611f7c90826129a1565b90505b620100008210611f9c57601091821c91611f9990826129a1565b90505b6101008210611fb857600891821c91611fb590826129a1565b90505b60108210611fd357600491821c91611fd090826129a1565b90505b60048210611fee57600291821c91611feb90826129a1565b90505b60028210610e7f576105996001826129a1565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106120455760405163698d9a0160e11b8152600481018290526024016107b0565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261207f5780670de0b6b3a7640000850401945050505050610599565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156120e35768016a09e667f3bcc9090260401c5b6001603e1b8216156120fe576801306fe0a31b7152df0260401c5b6001603d1b821615612119576801172b83c7d517adce0260401c5b6001603c1b8216156121345768010b5586cf9890f62a0260401c5b6001603b1b82161561214f576801059b0d31585743ae0260401c5b6001603a1b82161561216a57680102c9a3e778060ee70260401c5b600160391b8216156121855768010163da9fb33356d80260401c5b600160381b8216156121a057680100b1afa5abcbed610260401c5b600160371b8216156121bb5768010058c86da1c09ea20260401c5b600160361b8216156121d6576801002c605e2e8cec500260401c5b600160351b8216156121f157680100162f3904051fa10260401c5b600160341b82161561220c576801000b175effdc76ba0260401c5b600160331b82161561222757680100058ba01fb9f96d0260401c5b600160321b8216156122425768010002c5cc37da94920260401c5b600160311b82161561225d576801000162e525ee05470260401c5b600160301b8216156122785768010000b17255775c040260401c5b6001602f1b821615612293576801000058b91b5bc9ae0260401c5b6001602e1b8216156122ae57680100002c5c89d5ec6d0260401c5b6001602d1b8216156122c95768010000162e43f4f8310260401c5b6001602c1b8216156122e457680100000b1721bcfc9a0260401c5b6001602b1b8216156122ff5768010000058b90cf1e6e0260401c5b6001602a1b82161561231a576801000002c5c863b73f0260401c5b600160291b82161561233557680100000162e430e5a20260401c5b600160281b821615612350576801000000b1721835510260401c5b600160271b82161561236b57680100000058b90c0b490260401c5b600160261b8216156123865768010000002c5c8601cc0260401c5b600160251b8216156123a1576801000000162e42fff00260401c5b600160241b8216156123bc5768010000000b17217fbb0260401c5b600160231b8216156123d7576801000000058b90bfce0260401c5b600160221b8216156123f257680100000002c5c85fe30260401c5b600160211b82161561240d5768010000000162e42ff10260401c5b600160201b82161561242857680100000000b17217f80260401c5b63800000008216156124435768010000000058b90bfc0260401c5b634000000082161561245e576801000000002c5c85fe0260401c5b632000000082161561247957680100000000162e42ff0260401c5b6310000000821615612494576801000000000b17217f0260401c5b63080000008216156124af57680100000000058b90c00260401c5b63040000008216156124ca5768010000000002c5c8600260401c5b63020000008216156124e5576801000000000162e4300260401c5b63010000008216156125005768010000000000b172180260401c5b6280000082161561251a576801000000000058b90c0260401c5b6240000082161561253457680100000000002c5c860260401c5b6220000082161561254e5768010000000000162e430260401c5b6210000082161561256857680100000000000b17210260401c5b620800008216156125825768010000000000058b910260401c5b6204000082161561259c576801000000000002c5c80260401c5b620200008216156125b657680100000000000162e40260401c5b620100008216156125cf5761b172600160401b010260401c5b6180008216156125e7576158b9600160401b010260401c5b6140008216156125ff57612c5d600160401b010260401c5b6120008216156126175761162e600160401b010260401c5b61100082161561262f57610b17600160401b010260401c5b6108008216156126475761058c600160401b010260401c5b61040082161561265f576102c6600160401b010260401c5b61020082161561267757610163600160401b010260401c5b61010082161561268e5760b1600160401b010260401c5b60808216156126a4576059600160401b010260401c5b60408216156126ba57602c600160401b010260401c5b60208216156126d0576016600160401b010260401c5b60108216156126e657600b600160401b010260401c5b60088216156126fc576006600160401b010260401c5b6004821615612712576003600160401b010260401c5b6002821615612728576001600160401b010260401c5b600182161561273e576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610e7f57600080fd5b60006020828403121561279a578081fd5b81356001600160a01b038116811461077a578182fd5b6000602082840312156127c1578081fd5b813561ffff8116811461077a578182fd5b6000602082840312156127e3578081fd5b5035919050565b6000602082840312156127fb578081fd5b5051919050565b60008060408385031215612814578081fd5b50508035926020909101359150565b600080600060608486031215612837578081fd5b505081359360208301359350604090920135919050565b60006020828403121561285f578081fd5b61077a82612775565b6000806040838503121561287a578182fd5b61288383612775565b915061289160208401612775565b90509250929050565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015612904578581018301518582016040015282016128e8565b818111156129155783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60c0810161296e828561289a565b61077a606083018461289a565b600061ffff80831681851680830382111561299857612998612a9a565b01949350505050565b600082198211156129b4576129b4612a9a565b500190565b6000826129c8576129c8612ab0565b500490565b60008160001904831182151516156129e7576129e7612a9a565b500290565b600061ffff83811690831681811015612a0757612a07612a9a565b039392505050565b600082821015612a2157612a21612a9a565b500390565b600063ffffffff83811690831681811015612a0757612a07612a9a565b600061ffff80831681811415612a5b57612a5b612a9a565b6001019392505050565b600061ffff80841680612a7a57612a7a612ab0565b92169190910692915050565b600082612a9557612a95612ab0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212207ba4ec62dfe4722373e2ce8b178b7d8ee9127d2cd6dd4a1545b2e2e5f9283d1164736f6c63430008040033";

export class TestRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestRateOracle {
    return super.attach(address) as TestRateOracle;
  }
  connect(signer: Signer): TestRateOracle__factory {
    return super.connect(signer) as TestRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateOracleInterface {
    return new utils.Interface(_abi) as TestRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestRateOracle;
  }
}
