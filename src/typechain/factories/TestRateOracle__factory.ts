/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRateOracle,
  TestRateOracleInterface,
} from "../TestRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "contract IERC20Minimal",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "RateCardinalityNext",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_YIELD_BEARING_PROTOCOL_ID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "contract IAaveV2LendingPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAfterOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBeforeOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestObservedRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "testGrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "queriedTime",
        type: "uint32",
      },
    ],
    name: "testObserveSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20Minimal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002ed338038062002ed38339810160408190526200003491620003ec565b818180620000423362000216565b6001600160a01b038116620000745760405162461bcd60e51b81526004016200006b906200042b565b60405180910390fd5b6001600160a01b039081166080528216620000d25760405162461bcd60e51b815260206004820152601460248201527f6161766520706f6f6c206d75737420657869737400000000000000000000000060448201526064016200006b565b6001600160a01b038116620000fb5760405162461bcd60e51b81526004016200006b906200042b565b6201000380546001600160a01b0319166001600160a01b03841617905560006200013062000266602090811b62000c1717901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b1580156200017e57600080fd5b505afa15801562000193573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b9919062000462565b9050620001d8828260046200027860201b62000c27179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff0000191617620100009390921692909202179055506200047c945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200027342620002fd565b905090565b60008062000287848462000344565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b8063ffffffff811681146200033f5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016200006b565b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620003a35760405162461bcd60e51b81526004016200006b906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6001600160a01b0381168114620003e957600080fd5b50565b600080604083850312156200040057600080fd5b82516200040d81620003d3565b60208401519092506200042081620003d3565b809150509250929050565b60208082526015908201527f756e6465726c79696e67206d7573742065786973740000000000000000000000604082015260600190565b6000602082840312156200047557600080fd5b5051919050565b608051612a1f620004b46000396000818161032e015281816109a50152818161113f0152818161153b01526115fc0152612a1f6000f3fe608060405234801561001057600080fd5b50600436106101805760003560e01c806304a2e89b146101855780631195082e146101a35780631a686502146101ce57806322ff6568146101fb578063252c09d71461021557806325f258dd1461025457806332148f67146102675780633c155bd51461027c5780633eaf5d9f146102a457806341453528146102cd57806354124c64146102e057806356da9775146102f35780636e035c05146103165780636f307dc314610329578063715018a61461035d578063770a7d6d146103655780637aa4db13146103705780637cf2cc9f146103785780637f0ca7ab146103815780638da5cb5b1461038c57806393556dbd1461039457806395f3e605146103a7578063a223ee0d146103c8578063bdb05092146103d3578063c330c98d146103e6578063c58b59b8146103f5578063c7db359b14610408578063e16e189e14610450578063e9b69c0d14610463578063e9d337b814610476578063f2fde38b1461048b578063f739670c1461049e575b600080fd5b610190620100075481565b6040519081526020015b60405180910390f35b6101906101b136600461268a565b600160209081526000928352604080842090915290825290205481565b62010004546101e3906001600160801b031681565b6040516001600160801b03909116815260200161019a565b610203600181565b60405160ff909116815260200161019a565b6102286102233660046126bd565b6104b1565b6040805163ffffffff90941684526001600160d81b03909216602084015215159082015260600161019a565b6101906102623660046126d6565b6104eb565b61027a6102753660046126f8565b610559565b005b61028f61028a3660046126f8565b6105de565b6040805192835260208301919091520161019a565b62010003546102ba90600160a01b900460020b81565b60405160029190910b815260200161019a565b6101906102db3660046126d6565b61064b565b6101906102ee36600461271c565b61065f565b6103066103013660046126d6565b6106b4565b604051901515815260200161019a565b6101906103243660046126d6565b61071a565b6103507f000000000000000000000000000000000000000000000000000000000000000081565b60405161019a9190612748565b61027a61072d565b610190620100055481565b61027a610771565b61019060025481565b610190620100065481565b6103506107be565b6101906103a23660046126d6565b6107cd565b6103ba6103b536600461275c565b61085d565b60405161019a9291906127a1565b610190620100085481565b61027a6103e13660046126bd565b610895565b610190670de0b6b3a764000081565b61019061040336600461275c565b610909565b60035461042b9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff9485168152928416602084015292169181019190915260600161019a565b61027a61045e3660046126f8565b61093b565b61027a61047136600461275c565b61097a565b6201000354610350906001600160a01b031681565b61027a6104993660046127bc565b610a70565b6101906104ac3660046126d6565b610b0d565b60048161ffff81106104c257600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b6000806104f88484610c98565b9092509050801561055157600061051661051186610dc9565b610dd7565b9050600061052661051186610dc9565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff16600061057560048385610e1c565b6003805461ffff808416600160201b810261ffff60201b19909316929092179092559192508316146105d95760405161ffff821681527f8a96a9c4bca0fb28be0fc5c84e95aff121a64e2533021e9d638bdc1f03b14ece9060200160405180910390a15b505050565b600080600060048461ffff1661ffff81106105fb576105fb6127e5565b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006106578383610c98565b509392505050565b60008061066b83610f0e565b90506000610681670de0b6b3a764000086612811565b9050600061068f8284610f25565b9050600061069c82610f64565b90506106a88882610f75565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826106db8584610f75565b905060006106e98684610f75565b90508187111580156106fb5750808710155b1561070d576001945050505050610553565b6000945050505050610553565b60006107268383610fc4565b9392505050565b336107366107be565b6001600160a01b0316146107655760405162461bcd60e51b815260040161075c90612829565b60405180910390fd5b61076f6000611029565b565b6003546107969061ffff80821691620100008104821691600160201b90910416611079565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b6000818311156108125760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b604482015260640161075c565b600061081e8484610b0d565b9050600061082c858561285e565b9050600061083982611261565b9050600061084682610f0e565b90506108528482610fc4565b979650505050505050565b610865612656565b61086d612656565b60035461088c90600490859061ffff80821691620100009004166112ae565b91509150915091565b3361089e6107be565b6001600160a01b0316146108c45760405162461bcd60e51b815260040161075c90612829565b80600254146109065760028190556040518181527f88bd1242a1ad7dbba4967e0120324f17c382e4e3006e01dc3ffc0bf43e4b2a399060200160405180910390a15b50565b600061092e610916610c17565b600354849061ffff8082169162010000900416611460565b6201000581905592915050565b60035461095690600490600160201b900461ffff1683610e1c565b6003805461ffff92909216600160201b0261ffff60201b1990921691909117905550565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906109cd907f000000000000000000000000000000000000000000000000000000000000000090600401612748565b60206040518083038186803b1580156109e557600080fd5b505afa1580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d9190612875565b9050600080610a4b84610a2e610c17565b6003546004929190879061ffff80821691620100009004166117df565b6020918201516001600160d81b03908116620100075591015116620100085550505050565b33610a796107be565b6001600160a01b031614610a9f5760405162461bcd60e51b815260040161075c90612829565b6001600160a01b038116610b045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161075c565b61090681611029565b600081831115610b4b5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b604482015260640161075c565b81831415610b5b57506000610553565b6000610b65610c17565b90506000610b7285610dd7565b90506000610b7f85610dd7565b600354909150600090610ba3908590859061ffff8082169162010000900416611460565b600354909150600090610bc7908690859061ffff8082169162010000900416611460565b905081811115610c09576000610bfb676765c793fa10079d601b1b610bec8486611992565b610bf6919061285e565b611a07565b965061055395505050505050565b600095505050505050610553565b6000610c2242610dd7565b905090565b600080610c348484611a75565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b6000806000610ca961051186610dc9565b90506000610cb961051186610dc9565b905060008263ffffffff16118015610cd7575060008163ffffffff16115b610d0b5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b604482015260640161075c565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610d615763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610dc0565b8063ffffffff16610d70610c17565b63ffffffff1610610d9c57610d918263ffffffff168263ffffffff16610b0d565b935060019250610dc0565b610db98263ffffffff16610dae610c17565b63ffffffff16610b0d565b9350600192505b50509250929050565b670de0b6b3a7640000900490565b8063ffffffff81168114610e175760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b604482015260640161075c565b919050565b6000808361ffff1611610e555760405162461bcd60e51b81526020600482015260016024820152604960f81b604482015260640161075c565b61ffff8261ffff1610610e995760405162461bcd60e51b815260206004820152600c60248201526b189d5999995c881b1a5b5a5d60a21b604482015260640161075c565b8261ffff168261ffff1611610eaf575081610726565b825b8261ffff168161ffff161015610f05576001858261ffff1661ffff8110610eda57610eda6127e5565b01805463ffffffff191663ffffffff9290921691909117905580610efd816128a4565b915050610eb1565b50909392505050565b6000610553826a1a1601fc4ea7109e000000611aed565b600082610f4a578115610f39576000610f43565b670de0b6b3a76400005b9050610553565b610726610f5f610f5985611b02565b84611bb2565b611bbe565b600080610726633b9aca00846128c6565b6000821580610f82575081155b15610f8f57506000610553565b676765c793fa10079d601b1b610fa66002826128e5565b610fb084866128c6565b610fba9190612811565b61072691906128e5565b600082610fd357506000610553565b6000610fe8610fe26001611261565b84611aed565b9050600061100a85610ffa6001611261565b6110049190612811565b83610f25565b90506110166001611261565b611020908261285e565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110611096576110966127e5565b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b90910416151590820152905060006110e0610c17565b9050816000015163ffffffff166002548263ffffffff16611101919061285e565b1015611114578686935093505050610c90565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390611167907f000000000000000000000000000000000000000000000000000000000000000090600401612748565b60206040518083038186803b15801561117f57600080fd5b505afa158015611193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b79190612875565b9050806111d75760405163bd89c5af60e01b815260040160405180910390fd5b7f5aec68e6980e788266f2f59f6fddb85f3e256ce6da46fdfab920b9b06aaa7375611200611c04565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161125260048984848b8b611c0f565b94509450505050935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112a057604051633492ffd960e01b81526004810183905260240161075c565b50670de0b6b3a76400000290565b6112b6612656565b6112be612656565b6000836112cc8660016128f9565b6112d6919061291f565b61ffff169050600060018561ffff16836112f09190612811565b6112fa919061285e565b905060005b600161130b8385612811565b901c90508861131e61ffff881683612940565b61ffff811061132f5761132f6127e5565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113865761137f816001612811565b92506112ff565b8861ffff8716611397836001612811565b6113a19190612940565b61ffff81106113b2576113b26127e5565b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061141e5750846000015163ffffffff168963ffffffff1611155b156114295750611454565b806114405761143960018361285e565b925061144e565b61144b826001612811565b93505b506112ff565b50505094509492505050565b60008363ffffffff168563ffffffff16101561148f57604051632ff198e560e21b815260040160405180910390fd5b8363ffffffff168563ffffffff1614156115d1576114ab612656565b60048461ffff1661ffff81106114c3576114c36127e5565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff16151593830193909352909250908716146115ba57620100035460405163d15e005360e01b81526001600160a01b039091169063d15e005390611563907f000000000000000000000000000000000000000000000000000000000000000090600401612748565b60206040518083038186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b39190612875565b91506115cb565b80602001516001600160d81b031691505b506117d7565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390611624907f000000000000000000000000000000000000000000000000000000000000000090600401612748565b60206040518083038186803b15801561163c57600080fd5b505afa158015611650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116749190612875565b90506000806116886004888a868a8a6117df565b91509150816000015163ffffffff168763ffffffff1614156116b95781602001516001600160d81b031693506117d3565b805163ffffffff888116911614156116e05780602001516001600160d81b031693506117d3565b600082602001516001600160d81b031682602001516001600160d81b0316111561174f576000676765c793fa10079d601b1b61173684602001516001600160d81b031686602001516001600160d81b0316611992565b611740919061285e565b905061174b81611a07565b9150505b6000611780670de0b6b3a76400008551855161176b9190612954565b63ffffffff1661177b91906128c6565b610f0e565b9050600061178e8383610fc4565b90506117cd85602001516001600160d81b0316826117b1670de0b6b3a764000090565b88516117bd908f612954565b63ffffffff166102ee91906128c6565b96505050505b5050505b949350505050565b6117e7612656565b6117ef612656565b878461ffff1661ffff8110611806576118066127e5565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290935090881610611885578663ffffffff16826000015163ffffffff16141561187157611987565b8161187c8787611a75565b91509150611987565b87836118928660016128f9565b61189c919061291f565b61ffff1661ffff81106118b1576118b16127e5565b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506119365760408051606081018252895463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff808916911611156119765760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015260640161075c565b611982888886866112ae565b915091505b965096945050505050565b604080518082019091526002815261035360f41b6020820152600090826119cc5760405162461bcd60e51b815260040161075c9190612979565b5060006119da6002846128e5565b905082816119f3676765c793fa10079d601b1b876128c6565b6119fd9190612811565b6117d791906128e5565b600080611a196002633b9aca006128e5565b90506000611a278483612811565b90508181101560405180604001604052806002815260200161343960f01b81525090611a665760405162461bcd60e51b815260040161075c9190612979565b506117d7633b9aca00826128e5565b611a7d612656565b6001600160d81b03821115611abd5760405162461bcd60e51b815260040161075c906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061072683670de0b6b3a764000084611d56565b6000670de0b6b3a7640000821015611b3057604051633621413760e21b81526004810183905260240161075c565b6000611b45670de0b6b3a76400008404611e24565b670de0b6b3a7640000808202935090915083821c90811415611b68575050919050565b6706f05b59d3b200005b8015611baa57670de0b6b3a7640000828002049150671bc16d674ec800008210611ba2579283019260019190911c905b60011c611b72565b505050919050565b60006107268383611f02565b6000680a688906bd8b0000008210611bec57604051634a4f26f160e01b81526004810183905260240161075c565b670de0b6b3a7640000604083901b0461072681611fc4565b6000610c2242611261565b6000806000888861ffff1661ffff8110611c2b57611c2b6127e5565b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611c865787859250925050611987565b8461ffff168461ffff16118015611cae5750611ca36001866129ce565b61ffff168861ffff16145b15611cbb57839150611cbf565b8491505b81611ccb8960016128f9565b611cd5919061291f565b9250611ce18787611a75565b898461ffff1661ffff8110611cf857611cf86127e5565b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff90941693909317179290921617905550965096945050505050565b600080806000198587098587029250828110838203039150508060001415611d9157838281611d8757611d8761288e565b0492505050610726565b838110611dbb57604051631dcf306360e21b8152600481018290526024810185905260440161075c565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611e4457608091821c91611e419082612811565b90505b600160401b8210611e6257604091821c91611e5f9082612811565b90505b600160201b8210611e8057602091821c91611e7d9082612811565b90505b620100008210611e9d57601091821c91611e9a9082612811565b90505b6101008210611eb957600891821c91611eb69082612811565b90505b60108210611ed457600491821c91611ed19082612811565b90505b60048210611eef57600291821c91611eec9082612811565b90505b60028210610e1757610553600182612811565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110611f465760405163698d9a0160e11b81526004810182905260240161075c565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182611f805780670de0b6b3a7640000850401945050505050610553565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611fe45768016a09e667f3bcc9090260401c5b6001603e1b821615611fff576801306fe0a31b7152df0260401c5b6001603d1b82161561201a576801172b83c7d517adce0260401c5b6001603c1b8216156120355768010b5586cf9890f62a0260401c5b6001603b1b821615612050576801059b0d31585743ae0260401c5b6001603a1b82161561206b57680102c9a3e778060ee70260401c5b600160391b8216156120865768010163da9fb33356d80260401c5b600160381b8216156120a157680100b1afa5abcbed610260401c5b600160371b8216156120bc5768010058c86da1c09ea20260401c5b600160361b8216156120d7576801002c605e2e8cec500260401c5b600160351b8216156120f257680100162f3904051fa10260401c5b600160341b82161561210d576801000b175effdc76ba0260401c5b600160331b82161561212857680100058ba01fb9f96d0260401c5b600160321b8216156121435768010002c5cc37da94920260401c5b600160311b82161561215e576801000162e525ee05470260401c5b600160301b8216156121795768010000b17255775c040260401c5b6001602f1b821615612194576801000058b91b5bc9ae0260401c5b6001602e1b8216156121af57680100002c5c89d5ec6d0260401c5b6001602d1b8216156121ca5768010000162e43f4f8310260401c5b6001602c1b8216156121e557680100000b1721bcfc9a0260401c5b6001602b1b8216156122005768010000058b90cf1e6e0260401c5b6001602a1b82161561221b576801000002c5c863b73f0260401c5b600160291b82161561223657680100000162e430e5a20260401c5b600160281b821615612251576801000000b1721835510260401c5b600160271b82161561226c57680100000058b90c0b490260401c5b600160261b8216156122875768010000002c5c8601cc0260401c5b600160251b8216156122a2576801000000162e42fff00260401c5b600160241b8216156122bd5768010000000b17217fbb0260401c5b600160231b8216156122d8576801000000058b90bfce0260401c5b600160221b8216156122f357680100000002c5c85fe30260401c5b600160211b82161561230e5768010000000162e42ff10260401c5b600160201b82161561232957680100000000b17217f80260401c5b63800000008216156123445768010000000058b90bfc0260401c5b634000000082161561235f576801000000002c5c85fe0260401c5b632000000082161561237a57680100000000162e42ff0260401c5b6310000000821615612395576801000000000b17217f0260401c5b63080000008216156123b057680100000000058b90c00260401c5b63040000008216156123cb5768010000000002c5c8600260401c5b63020000008216156123e6576801000000000162e4300260401c5b63010000008216156124015768010000000000b172180260401c5b6280000082161561241b576801000000000058b90c0260401c5b6240000082161561243557680100000000002c5c860260401c5b6220000082161561244f5768010000000000162e430260401c5b6210000082161561246957680100000000000b17210260401c5b620800008216156124835768010000000000058b910260401c5b6204000082161561249d576801000000000002c5c80260401c5b620200008216156124b757680100000000000162e40260401c5b620100008216156124d05761b172600160401b010260401c5b6180008216156124e8576158b9600160401b010260401c5b61400082161561250057612c5d600160401b010260401c5b6120008216156125185761162e600160401b010260401c5b61100082161561253057610b17600160401b010260401c5b6108008216156125485761058c600160401b010260401c5b610400821615612560576102c6600160401b010260401c5b61020082161561257857610163600160401b010260401c5b61010082161561258f5760b1600160401b010260401c5b60808216156125a5576059600160401b010260401c5b60408216156125bb57602c600160401b010260401c5b60208216156125d1576016600160401b010260401c5b60108216156125e757600b600160401b010260401c5b60088216156125fd576006600160401b010260401c5b6004821615612613576003600160401b010260401c5b6002821615612629576001600160401b010260401c5b600182161561263f576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610e1757600080fd5b6000806040838503121561269d57600080fd5b6126a683612676565b91506126b460208401612676565b90509250929050565b6000602082840312156126cf57600080fd5b5035919050565b600080604083850312156126e957600080fd5b50508035926020909101359150565b60006020828403121561270a57600080fd5b813561ffff8116811461072657600080fd5b60008060006060848603121561273157600080fd5b505081359360208301359350604090920135919050565b6001600160a01b0391909116815260200190565b60006020828403121561276e57600080fd5b61072682612676565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b60c081016127af8285612777565b6107266060830184612777565b6000602082840312156127ce57600080fd5b81356001600160a01b038116811461072657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612824576128246127fb565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015612870576128706127fb565b500390565b60006020828403121561288757600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600061ffff808316818114156128bc576128bc6127fb565b6001019392505050565b60008160001904831182151516156128e0576128e06127fb565b500290565b6000826128f4576128f461288e565b500490565b600061ffff808316818516808303821115612916576129166127fb565b01949350505050565b600061ffff808416806129345761293461288e565b92169190910692915050565b60008261294f5761294f61288e565b500690565b600063ffffffff83811690831681811015612971576129716127fb565b039392505050565b600060208083528351808285015260005b818110156129a65785810183015185820160400152820161298a565b818111156129b8576000604083870101525b50601f01601f1916929092016040019392505050565b600061ffff83811690831681811015612971576129716127fb56fea2646970667358221220a9737d79cf7c88de3cfc68c5188647d49e44a7e48176eb3c466c43d175d1a15464736f6c63430008090033";

export class TestRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestRateOracle {
    return super.attach(address) as TestRateOracle;
  }
  connect(signer: Signer): TestRateOracle__factory {
    return super.connect(signer) as TestRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateOracleInterface {
    return new utils.Interface(_abi) as TestRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestRateOracle;
  }
}
