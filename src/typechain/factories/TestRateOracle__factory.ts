/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRateOracle,
  TestRateOracleInterface,
} from "../TestRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "aaveLendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginRequirement",
        type: "uint256",
      },
    ],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
    ],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextOld",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "IncreaserateCardinalityNext",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferWrite",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "binarySearch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "beforeOrAt",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "blockTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint216",
            name: "observedValue",
            type: "uint216",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
        ],
        internalType: "struct OracleBuffer.Observation",
        name: "atOrAfter",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
    ],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAfterOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestBeforeOrAtRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestObservedRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "observedValueInRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValueInRay",
        type: "uint256",
      },
    ],
    name: "rayValueIsCloseTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateFromTo",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInYears",
        type: "uint256",
      },
    ],
    name: "testComputeApyFromRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "testGetRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "target",
        type: "uint32",
      },
    ],
    name: "testGetSurroundingRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "testGrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "queriedTime",
        type: "uint32",
      },
    ],
    name: "testObserveSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingYieldBearingProtocolID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002e9c38038062002e9c833981016040819052620000349162000346565b81818062000042336200016d565b60601b6001600160601b0319166080526201000380546001600160a01b0319166001600160a01b038416179055600062000087620001bd602090811b62000c8617901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b158015620000d557600080fd5b505afa158015620000ea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011091906200037d565b90506200012f82826004620001cf60201b62000c96179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff00001916176201000093909216929092021790555062000396945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001ca4262000254565b905090565b600080620001de84846200029f565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b8063ffffffff811681146200029a5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064015b60405180910390fd5b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620002fe5760405162461bcd60e51b815260040162000291906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b80516001600160a01b03811681146200029a57600080fd5b6000806040838503121562000359578182fd5b62000364836200032e565b915062000374602084016200032e565b90509250929050565b6000602082840312156200038f578081fd5b5051919050565b60805160601c612acb620003d16000396000818161032a01528181610a1a01528181611184015281816115bf01526116800152612acb6000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806304a2e89b1461019b5780631195082e146101b95780631a686502146101e4578063252c09d71461021157806325f258dd1461025057806332148f67146102635780633c155bd5146102785780633eaf5d9f146102a057806341453528146102c957806354124c64146102dc57806356da9775146102ef5780636e035c05146103125780636f307dc314610325578063715018a614610359578063770a7d6d146103615780637aa4db131461036c5780637cf2cc9f146103745780637f0ca7ab1461037d5780638da5cb5b1461038857806393556dbd1461039057806395f3e605146103a3578063a223ee0d146103c4578063b34bd683146103cf578063bdb0509214610411578063c330c98d14610424578063c58b59b814610433578063c7db359b14610446578063dd9d05d114610469578063e16e189e14610483578063e353020c14610496578063e9b69c0d146104a9578063e9d337b8146104bc578063f2fde38b146104d1578063f739670c146104e4575b600080fd5b6101a6620100075481565b6040519081526020015b60405180910390f35b6101a66101c7366004612837565b600160209081526000928352604080842090915290825290205481565b62010004546101f9906001600160801b031681565b6040516001600160801b0390911681526020016101b0565b61022461021f3660046127a1565b6104f7565b6040805163ffffffff90941684526001600160d81b0390921660208401521515908201526060016101b0565b6101a661025e3660046127d1565b610531565b61027661027136600461277f565b61059f565b005b61028b61028636600461277f565b61062b565b604080519283526020830191909152016101b0565b62010003546102b690600160a01b900460020b81565b60405160029190910b81526020016101b0565b6101a66102d73660046127d1565b6106a6565b6101a66102ea3660046127f2565b6106ba565b6103026102fd3660046127d1565b61070f565b60405190151581526020016101b0565b6101a66103203660046127d1565b610775565b61034c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101b09190612893565b610276610788565b6101a6620100055481565b6102766107cc565b6101a660025481565b6101a6620100065481565b61034c610819565b6101a661039e3660046127d1565b610828565b6103b66103b136600461281d565b6108b8565b6040516101b092919061292f565b6101a6620100085481565b60035461ffff80821691620100008104821691600160201b909104165b6040805161ffff948516815292841660208401529216918101919091526060016101b0565b61027661041f3660046127a1565b6108f0565b6101a6670de0b6b3a764000081565b6101a661044136600461281d565b610964565b6003546103ec9061ffff80821691620100008104821691600160201b9091041683565b610471600181565b60405160ff90911681526020016101b0565b61027661049136600461277f565b610996565b6101a66104a43660046127d1565b6109d5565b6102766104b736600461281d565b6109ef565b620100035461034c906001600160a01b031681565b6102766104df366004612758565b610ae0565b6101a66104f23660046127d1565b610b7d565b60048161ffff811061050857600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061053e8484610d07565b9092509050801561059757600061055c61055786610e38565b610e46565b9050600061056c61055786610e38565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006105bb60048385610e8b565b6003805461ffff808416600160201b810261ffff60201b1990931692909217909255919250831614610626576040805161ffff8085168252831660208201527f1f0a33a4e18d81b29e729a440bc8de6a84b65d9fbdf81682d85c3a382296e55e910160405180910390a15b505050565b600080600060048461ffff1661ffff811061065657634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8116808352600160201b82046001600160d81b031660208401819052600160f81b90920460ff1615159290930191909152909590945092505050565b60006106b28383610d07565b509392505050565b6000806106c683610f47565b905060006106dc670de0b6b3a764000086612970565b905060006106ea8284610f5e565b905060006106f782610f9d565b90506107038882610fae565b98975050505050505050565b60006b033b2e3cadb136f08f6400006b033b2e3c91efc989409c0000826107368584610fae565b905060006107448684610fae565b90508187111580156107565750808710155b15610768576001945050505050610599565b6000945050505050610599565b60006107818383610ffd565b9392505050565b33610791610819565b6001600160a01b0316146107c05760405162461bcd60e51b81526004016107b7906128fa565b60405180910390fd5b6107ca6000611060565b565b6003546107f19061ffff80821691620100008104821691600160201b909104166110b0565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b60008183111561086d5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016107b7565b60006108798484610b7d565b9050600061088785856129de565b90506000610894826112a6565b905060006108a182610f47565b90506108ad8482610ffd565b979650505050505050565b6108c0612724565b6108c8612724565b6003546108e790600490859061ffff80821691620100009004166112f3565b91509150915091565b336108f9610819565b6001600160a01b03161461091f5760405162461bcd60e51b81526004016107b7906128fa565b80600254146109615760028190556040518181527f19ede2e51d1531988bc60742b8bb97134e9f3a1ec45cf7cf4ea09953f80b2ac59060200160405180910390a15b50565b6000610989610971610c86565b600354849061ffff80821691620100009004166114c1565b6201000581905592915050565b6003546109b190600490600160201b900461ffff1683610e8b565b6003805461ffff92909216600160201b0261ffff60201b1990921691909117905550565b60006109e18383610b7d565b620100068190559392505050565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390610a42907f000000000000000000000000000000000000000000000000000000000000000090600401612893565b60206040518083038186803b158015610a5a57600080fd5b505afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9291906127b9565b6003549091506000908190610abb906004908690869061ffff808216916201000090041661185b565b6020918201516001600160d81b03908116620100075591015116620100085550505050565b33610ae9610819565b6001600160a01b031614610b0f5760405162461bcd60e51b81526004016107b7906128fa565b6001600160a01b038116610b745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107b7565b61096181611060565b600081831115610bbb5760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016107b7565b81831415610bcb57506000610599565b6000610bd5610c86565b90506000610be285610e46565b90506000610bef85610e46565b600354909150600090610c13908590859061ffff80821691620100009004166114c1565b600354909150600090610c37908690859061ffff80821691620100009004166114c1565b905081811115610c78576000610c6a610c65676765c793fa10079d601b1b610c5f8587611a29565b90611a9e565b611aaa565b965061059995505050505050565b600095505050505050610599565b6000610c9142610e46565b905090565b600080610ca38484611b18565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b6000806000610d1861055786610e38565b90506000610d2861055786610e38565b905060008263ffffffff16118015610d46575060008163ffffffff16115b610d7a5760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016107b7565b63ffffffff80831660009081526001602090815260408083209385168352929052205415610dd05763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610e2f565b8063ffffffff16610ddf610c86565b63ffffffff1610610e0b57610e008263ffffffff168263ffffffff16610b7d565b935060019250610e2f565b610e288263ffffffff16610e1d610c86565b63ffffffff16610b7d565b9350600192505b50509250929050565b670de0b6b3a7640000900490565b8063ffffffff81168114610e865760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016107b7565b919050565b6000808361ffff1611610ec45760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016107b7565b8261ffff168261ffff1611610eda575081610781565b825b8261ffff168161ffff161015610f3e576001858261ffff1661ffff8110610f1357634e487b7160e01b600052603260045260246000fd5b01805463ffffffff191663ffffffff9290921691909117905580610f3681612a12565b915050610edc565b50909392505050565b6000610599826a1a1601fc4ea7109e000000611b90565b600082610f83578115610f72576000610f7c565b670de0b6b3a76400005b9050610599565b610781610f98610f9285611ba5565b84611c55565b611c61565b600080610781633b9aca008461299c565b6000821580610fbb575081155b15610fc857506000610599565b676765c793fa10079d601b1b610fdf600282612988565b610fe9848661299c565b610ff39190612970565b6107819190612988565b60008261100c57506000610599565b600061103461102e8561101f60016112a6565b6110299190612970565b611ba5565b84611b90565b9050600061104182611c61565b905061104d60016112a6565b61105790826129de565b95945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff81106110db57634e487b7160e01b600052603260045260246000fd5b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000611125610c86565b9050816000015163ffffffff166002548263ffffffff1661114691906129de565b1015611159578686935093505050610cff565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906111ac907f000000000000000000000000000000000000000000000000000000000000000090600401612893565b60206040518083038186803b1580156111c457600080fd5b505afa1580156111d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fc91906127b9565b90508061121c5760405163bd89c5af60e01b815260040160405180910390fd5b7f43bca372be3e74f9c236cf54450ec01eb2d011690a24a7402ddff4e41267e447611245611ca7565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a161129760048984848b8b611cb2565b94509450505050935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f218211156112e557604051633492ffd960e01b8152600481018390526024016107b7565b50670de0b6b3a76400000290565b6112fb612724565b611303612724565b60008361131186600161294a565b61131b9190612a34565b61ffff169050600060018561ffff16836113359190612970565b61133f91906129de565b905060005b60016113508385612970565b901c90508861136361ffff881683612a55565b61ffff811061138257634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506113d9576113d2816001612970565b9250611344565b8861ffff87166113ea836001612970565b6113f49190612a55565b61ffff811061141357634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061147f5750846000015163ffffffff168963ffffffff1611155b1561148a57506114b5565b806114a15761149a6001836129de565b92506114af565b6114ac826001612970565b93505b50611344565b50505094509492505050565b60008363ffffffff168563ffffffff1610156115055760405162461bcd60e51b81526020600482015260036024820152624f4f4f60e81b60448201526064016107b7565b8363ffffffff168563ffffffff16141561165557611521612724565b60048461ffff1661ffff811061154757634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509087161461163e57620100035460405163d15e005360e01b81526001600160a01b039091169063d15e0053906115e7907f000000000000000000000000000000000000000000000000000000000000000090600401612893565b60206040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163791906127b9565b915061164f565b80602001516001600160d81b031691505b50611853565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e0053906116a8907f000000000000000000000000000000000000000000000000000000000000000090600401612893565b60206040518083038186803b1580156116c057600080fd5b505afa1580156116d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f891906127b9565b905060008061170b60048885898961185b565b91509150816000015163ffffffff168763ffffffff16141561173c5781602001516001600160d81b0316935061184f565b805163ffffffff888116911614156117635780602001516001600160d81b0316935061184f565b600082602001516001600160d81b031682602001516001600160d81b031611156117cb5760006117bc676765c793fa10079d601b1b610c5f85602001516001600160d81b031687602001516001600160d81b0316611a29565b90506117c781611aaa565b9150505b60006117fc670de0b6b3a7640000855185516117e791906129f5565b63ffffffff166117f7919061299c565b610f47565b9050600061180a8383610ffd565b905061184985602001516001600160d81b03168261182d670de0b6b3a764000090565b8851611839908f6129f5565b63ffffffff166102ea919061299c565b96505050505b5050505b949350505050565b611863612724565b61186b612724565b868461ffff1661ffff811061189057634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509087161061190f578563ffffffff16826000015163ffffffff1614156118fb57611a1f565b816119068787611b18565b91509150611a1f565b868361191c86600161294a565b6119269190612a34565b61ffff1661ffff811061194957634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506119ce5760408051606081018252885463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff80881691161115611a0e5760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016107b7565b611a1a878786866112f3565b915091505b9550959350505050565b604080518082019091526002815261035360f41b602082015260009082611a635760405162461bcd60e51b81526004016107b791906128a7565b506000611a71600284612988565b90508281611a8a676765c793fa10079d601b1b8761299c565b611a949190612970565b6118539190612988565b600061078182846129de565b600080611abc6002633b9aca00612988565b90506000611aca8483612970565b90508181101560405180604001604052806002815260200161343960f01b81525090611b095760405162461bcd60e51b81526004016107b791906128a7565b50611853633b9aca0082612988565b611b20612724565b6001600160d81b03821115611b605760405162461bcd60e51b81526004016107b7906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b600061078183670de0b6b3a764000084611e16565b6000670de0b6b3a7640000821015611bd357604051633621413760e21b8152600481018390526024016107b7565b6000611be8670de0b6b3a76400008404611ef2565b670de0b6b3a7640000808202935090915083821c90811415611c0b575050919050565b6706f05b59d3b200005b8015611c4d57670de0b6b3a7640000828002049150671bc16d674ec800008210611c45579283019260019190911c905b60011c611c15565b505050919050565b60006107818383611fd0565b6000680a688906bd8b0000008210611c8f57604051634a4f26f160e01b8152600481018390526024016107b7565b670de0b6b3a7640000604083901b0461078181612092565b6000610c91426112a6565b6000806000888861ffff1661ffff8110611cdc57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529092509088161415611d375787859250925050611e0b565b8461ffff168461ffff16118015611d5f5750611d546001866129bb565b61ffff168861ffff16145b15611d6c57839150611d70565b8491505b81611d7c89600161294a565b611d869190612a34565b9250611d928787611b18565b898461ffff1661ffff8110611db757634e487b7160e01b600052603260045260246000fd5b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b600080806000198587098587029250828110838203039150508060001415611e5f57838281611e5557634e487b7160e01b600052601260045260246000fd5b0492505050610781565b838110611e8957604051631dcf306360e21b815260048101829052602481018590526044016107b7565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b8210611f1257608091821c91611f0f9082612970565b90505b600160401b8210611f3057604091821c91611f2d9082612970565b90505b600160201b8210611f4e57602091821c91611f4b9082612970565b90505b620100008210611f6b57601091821c91611f689082612970565b90505b6101008210611f8757600891821c91611f849082612970565b90505b60108210611fa257600491821c91611f9f9082612970565b90505b60048210611fbd57600291821c91611fba9082612970565b90505b60028210610e8657610599600182612970565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106120145760405163698d9a0160e11b8152600481018290526024016107b7565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff81118261204e5780670de0b6b3a7640000850401945050505050610599565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156120b25768016a09e667f3bcc9090260401c5b6001603e1b8216156120cd576801306fe0a31b7152df0260401c5b6001603d1b8216156120e8576801172b83c7d517adce0260401c5b6001603c1b8216156121035768010b5586cf9890f62a0260401c5b6001603b1b82161561211e576801059b0d31585743ae0260401c5b6001603a1b82161561213957680102c9a3e778060ee70260401c5b600160391b8216156121545768010163da9fb33356d80260401c5b600160381b82161561216f57680100b1afa5abcbed610260401c5b600160371b82161561218a5768010058c86da1c09ea20260401c5b600160361b8216156121a5576801002c605e2e8cec500260401c5b600160351b8216156121c057680100162f3904051fa10260401c5b600160341b8216156121db576801000b175effdc76ba0260401c5b600160331b8216156121f657680100058ba01fb9f96d0260401c5b600160321b8216156122115768010002c5cc37da94920260401c5b600160311b82161561222c576801000162e525ee05470260401c5b600160301b8216156122475768010000b17255775c040260401c5b6001602f1b821615612262576801000058b91b5bc9ae0260401c5b6001602e1b82161561227d57680100002c5c89d5ec6d0260401c5b6001602d1b8216156122985768010000162e43f4f8310260401c5b6001602c1b8216156122b357680100000b1721bcfc9a0260401c5b6001602b1b8216156122ce5768010000058b90cf1e6e0260401c5b6001602a1b8216156122e9576801000002c5c863b73f0260401c5b600160291b82161561230457680100000162e430e5a20260401c5b600160281b82161561231f576801000000b1721835510260401c5b600160271b82161561233a57680100000058b90c0b490260401c5b600160261b8216156123555768010000002c5c8601cc0260401c5b600160251b821615612370576801000000162e42fff00260401c5b600160241b82161561238b5768010000000b17217fbb0260401c5b600160231b8216156123a6576801000000058b90bfce0260401c5b600160221b8216156123c157680100000002c5c85fe30260401c5b600160211b8216156123dc5768010000000162e42ff10260401c5b600160201b8216156123f757680100000000b17217f80260401c5b63800000008216156124125768010000000058b90bfc0260401c5b634000000082161561242d576801000000002c5c85fe0260401c5b632000000082161561244857680100000000162e42ff0260401c5b6310000000821615612463576801000000000b17217f0260401c5b630800000082161561247e57680100000000058b90c00260401c5b63040000008216156124995768010000000002c5c8600260401c5b63020000008216156124b4576801000000000162e4300260401c5b63010000008216156124cf5768010000000000b172180260401c5b628000008216156124e9576801000000000058b90c0260401c5b6240000082161561250357680100000000002c5c860260401c5b6220000082161561251d5768010000000000162e430260401c5b6210000082161561253757680100000000000b17210260401c5b620800008216156125515768010000000000058b910260401c5b6204000082161561256b576801000000000002c5c80260401c5b6202000082161561258557680100000000000162e40260401c5b6201000082161561259e5761b172600160401b010260401c5b6180008216156125b6576158b9600160401b010260401c5b6140008216156125ce57612c5d600160401b010260401c5b6120008216156125e65761162e600160401b010260401c5b6110008216156125fe57610b17600160401b010260401c5b6108008216156126165761058c600160401b010260401c5b61040082161561262e576102c6600160401b010260401c5b61020082161561264657610163600160401b010260401c5b61010082161561265d5760b1600160401b010260401c5b6080821615612673576059600160401b010260401c5b604082161561268957602c600160401b010260401c5b602082161561269f576016600160401b010260401c5b60108216156126b557600b600160401b010260401c5b60088216156126cb576006600160401b010260401c5b60048216156126e1576003600160401b010260401c5b60028216156126f7576001600160401b010260401c5b600182161561270d576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff81168114610e8657600080fd5b600060208284031215612769578081fd5b81356001600160a01b0381168114610781578182fd5b600060208284031215612790578081fd5b813561ffff81168114610781578182fd5b6000602082840312156127b2578081fd5b5035919050565b6000602082840312156127ca578081fd5b5051919050565b600080604083850312156127e3578081fd5b50508035926020909101359150565b600080600060608486031215612806578081fd5b505081359360208301359350604090920135919050565b60006020828403121561282e578081fd5b61078182612744565b60008060408385031215612849578182fd5b61285283612744565b915061286060208401612744565b90509250929050565b805163ffffffff1682526020808201516001600160d81b0316908301526040908101511515910152565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b818110156128d3578581018301518582016040015282016128b7565b818111156128e45783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60c0810161293d8285612869565b6107816060830184612869565b600061ffff80831681851680830382111561296757612967612a69565b01949350505050565b6000821982111561298357612983612a69565b500190565b60008261299757612997612a7f565b500490565b60008160001904831182151516156129b6576129b6612a69565b500290565b600061ffff838116908316818110156129d6576129d6612a69565b039392505050565b6000828210156129f0576129f0612a69565b500390565b600063ffffffff838116908316818110156129d6576129d6612a69565b600061ffff80831681811415612a2a57612a2a612a69565b6001019392505050565b600061ffff80841680612a4957612a49612a7f565b92169190910692915050565b600082612a6457612a64612a7f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220643192251a0539d395755a5e3f8a2cb44dc357143013141ce4dc66813fc02c5264736f6c63430008040033";

export class TestRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRateOracle> {
    return super.deploy(
      aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<TestRateOracle>;
  }
  getDeployTransaction(
    aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): TestRateOracle {
    return super.attach(address) as TestRateOracle;
  }
  connect(signer: Signer): TestRateOracle__factory {
    return super.connect(signer) as TestRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRateOracleInterface {
    return new utils.Interface(_abi) as TestRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRateOracle {
    return new Contract(address, _abi, signerOrProvider) as TestRateOracle;
  }
}
