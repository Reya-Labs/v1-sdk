/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveRateOracle,
  AaveRateOracleInterface,
} from "../AaveRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aaveLendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginRequirement",
        type: "uint256",
      },
    ],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
    ],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__FromUintOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextOld",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "observationCardinalityNextNew",
        type: "uint16",
      },
    ],
    name: "IncreaserateCardinalityNext",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "MinSecondsSinceLastUpdateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestampScaled",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "index",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "observedValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinality",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "cardinalityNext",
        type: "uint16",
      },
    ],
    name: "OracleBufferWrite",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_IN_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveLendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "to",
        type: "uint256",
      },
    ],
    name: "getApyFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "apyFromToWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getRateFromTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "beforeOrAtRateValueRay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "apyFromBeforeOrAtToAtOrAfterWad",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeDeltaBeforeOrAtToQueriedTimeWad",
        type: "uint256",
      },
    ],
    name: "interpolateRateValue",
    outputs: [
      {
        internalType: "uint256",
        name: "rateValueRay",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "minSecondsSinceLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "observations",
    outputs: [
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "observedValue",
        type: "uint216",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleVars",
    outputs: [
      {
        internalType: "uint16",
        name: "rateIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "rateCardinalityNext",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minSecondsSinceLastUpdate",
        type: "uint256",
      },
    ],
    name: "setMinSecondsSinceLastUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "settlementRateCache",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingYieldBearingProtocolID",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "termStartTimestampInWeiSeconds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "termEndTimestampInWeiSeconds",
        type: "uint256",
      },
    ],
    name: "variableFactorNoCache",
    outputs: [
      {
        internalType: "uint256",
        name: "resultWad",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "writeOracleEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200297e3803806200297e833981016040819052620000349162000342565b80620000403362000169565b60601b6001600160601b0319166080526201000380546001600160a01b0319166001600160a01b038416179055600062000085620001b9602090811b620007cf17901c565b620100035460405163d15e005360e01b81526001600160a01b0385811660048301529293506000929091169063d15e00539060240160206040518083038186803b158015620000d357600080fd5b505afa158015620000e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010e919062000379565b90506200012d82826004620001cb60201b620007df179092919060201c565b6003805465ffffffff0000191664010000000061ffff9384160263ffff0000191617620100009390921692909202179055506200039292505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000620001c64262000250565b905090565b600080620001da84846200029b565b8051865460208301516040909301511515600160f81b026001600160f81b036001600160d81b03909416640100000000027fff0000000000000000000000000000000000000000000000000000000000000090921663ffffffff9093169290921717919091161790945550600193849350915050565b8063ffffffff81168114620002965760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064015b60405180910390fd5b919050565b60408051606081018252600080825260208201819052918101919091526001600160d81b03821115620002fa5760405162461bcd60e51b81526004016200028d906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b80516001600160a01b03811681146200029657600080fd5b6000806040838503121562000355578182fd5b62000360836200032a565b915062000370602084016200032a565b90509250929050565b6000602082840312156200038b578081fd5b5051919050565b60805160601c6125b8620003c6600039600081816101c601528181610c6d01528181610f3d0152610ffe01526125b86000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c80631195082e146100f6578063252c09d71461013457806325f258dd1461017357806332148f6714610186578063414535281461019b57806354124c64146101ae5780636f307dc3146101c1578063715018a6146101f55780637aa4db13146101fd5780637cf2cc9f146102055780638da5cb5b1461020e57806393556dbd14610216578063bdb0509214610229578063c330c98d1461023c578063c7db359b1461024b578063dd9d05d114610293578063e9d337b8146102ad578063f2fde38b146102c2578063f739670c146102d5575b600080fd5b610121610104366004612369565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101476101423660046122ed565b6102e8565b6040805163ffffffff90941684526001600160d81b03909216602084015215159082015260600161012b565b61012161018136600461231d565b610322565b6101996101943660046122cb565b610390565b005b6101216101a936600461231d565b61041c565b6101216101bc36600461233e565b610430565b6101e87f000000000000000000000000000000000000000000000000000000000000000081565b60405161012b919061239b565b610199610485565b6101996104c9565b61012160025481565b6101e8610516565b61012161022436600461231d565b610525565b6101996102373660046122ed565b6105b5565b610121670de0b6b3a764000081565b60035461026e9061ffff80821691620100008104821691600160201b9091041683565b6040805161ffff9485168152928416602084015292169181019190915260600161012b565b61029b600181565b60405160ff909116815260200161012b565b62010003546101e8906001600160a01b031681565b6101996102d03660046122a4565b610629565b6101216102e336600461231d565b6106c6565b60048161ffff81106102f957600080fd5b015463ffffffff81169150600160201b81046001600160d81b031690600160f81b900460ff1683565b60008061032f8484610850565b9092509050801561038857600061034d61034886610981565b61098f565b9050600061035d61034886610981565b63ffffffff928316600090815260016020908152604080832095909316825293909352909120839055505b505b92915050565b600354600160201b900461ffff1660006103ac600483856109d4565b6003805461ffff808416600160201b810261ffff60201b1990931692909217909255919250831614610417576040805161ffff8085168252831660208201527f1f0a33a4e18d81b29e729a440bc8de6a84b65d9fbdf81682d85c3a382296e55e910160405180910390a15b505050565b60006104288383610850565b509392505050565b60008061043c83610a93565b90506000610452670de0b6b3a76400008661245d565b905060006104608284610aaa565b9050600061046d82610ae9565b90506104798882610afa565b98975050505050505050565b3361048e610516565b6001600160a01b0316146104bd5760405162461bcd60e51b81526004016104b490612402565b60405180910390fd5b6104c76000610b49565b565b6003546104ee9061ffff80821691620100008104821691600160201b90910416610b99565b6003805463ffffffff19166201000061ffff9384160261ffff19161792909116919091179055565b6000546001600160a01b031690565b60008183111561056a5760405162461bcd60e51b815260206004820152601060248201526f4d69736f72646572656420646174657360801b60448201526064016104b4565b600061057684846106c6565b9050600061058485856124cb565b9050600061059182610d8f565b9050600061059e82610a93565b90506105aa8482610ddc565b979650505050505050565b336105be610516565b6001600160a01b0316146105e45760405162461bcd60e51b81526004016104b490612402565b80600254146106265760028190556040518181527f19ede2e51d1531988bc60742b8bb97134e9f3a1ec45cf7cf4ea09953f80b2ac59060200160405180910390a15b50565b33610632610516565b6001600160a01b0316146106585760405162461bcd60e51b81526004016104b490612402565b6001600160a01b0381166106bd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b4565b61062681610b49565b6000818311156107045760405162461bcd60e51b815260206004820152600960248201526866726f6d203e20746f60b81b60448201526064016104b4565b818314156107145750600061038a565b600061071e6107cf565b9050600061072b8561098f565b905060006107388561098f565b60035490915060009061075c908590859061ffff8082169162010000900416610e3f565b600354909150600090610780908690859061ffff8082169162010000900416610e3f565b9050818111156107c15760006107b36107ae676765c793fa10079d601b1b6107a885876111d9565b9061124e565b61125a565b965061038a95505050505050565b60009550505050505061038a565b60006107da4261098f565b905090565b6000806107ec84846112c8565b85600082519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff9094169390931717929092161790555060019050805b935093915050565b600080600061086161034886610981565b9050600061087161034886610981565b905060008263ffffffff1611801561088f575060008163ffffffff16115b6108c35760405162461bcd60e51b8152602060048201526005602482015264554e49545360d81b60448201526064016104b4565b63ffffffff808316600090815260016020908152604080832093851683529290522054156109195763ffffffff808316600090815260016020908152604080832093851683529290529081205494509250610978565b8063ffffffff166109286107cf565b63ffffffff1610610954576109498263ffffffff168263ffffffff166106c6565b935060019250610978565b6109718263ffffffff166109666107cf565b63ffffffff166106c6565b9350600192505b50509250929050565b670de0b6b3a7640000900490565b8063ffffffff811681146109cf5760405162461bcd60e51b815260206004820152600760248201526654534f464c4f5760c81b60448201526064016104b4565b919050565b6000808361ffff1611610a0d5760405162461bcd60e51b81526020600482015260016024820152604960f81b60448201526064016104b4565b8261ffff168261ffff1611610a23575081610a8c565b825b8261ffff168161ffff161015610a87576001858261ffff1661ffff8110610a5c57634e487b7160e01b600052603260045260246000fd5b01805463ffffffff191663ffffffff9290921691909117905580610a7f816124ff565b915050610a25565b508190505b9392505050565b600061038a826a1a1601fc4ea7109e000000611340565b600082610acf578115610abe576000610ac8565b670de0b6b3a76400005b905061038a565b610a8c610ae4610ade85611355565b84611405565b611411565b600080610a8c633b9aca0084612489565b6000821580610b07575081155b15610b145750600061038a565b676765c793fa10079d601b1b610b2b600282612475565b610b358486612489565b610b3f919061245d565b610a8c9190612475565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060048661ffff1661ffff8110610bc457634e487b7160e01b600052603260045260246000fd5b60408051606081018252929091015463ffffffff811683526001600160d81b03600160201b820416602084015260ff600160f81b9091041615159082015290506000610c0e6107cf565b9050816000015163ffffffff166002548263ffffffff16610c2f91906124cb565b1015610c42578686935093505050610848565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390610c95907f00000000000000000000000000000000000000000000000000000000000000009060040161239b565b60206040518083038186803b158015610cad57600080fd5b505afa158015610cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce59190612305565b905080610d055760405163bd89c5af60e01b815260040160405180910390fd5b7f43bca372be3e74f9c236cf54450ec01eb2d011690a24a7402ddff4e41267e447610d2e611457565b6040805191825230602083015261ffff8b81168383015263ffffffff86166060840152608083018590528a811660a0840152891660c0830152519081900360e00190a1610d8060048984848b8b611462565b94509450505050935093915050565b60007812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21821115610dce57604051633492ffd960e01b8152600481018390526024016104b4565b50670de0b6b3a76400000290565b600082610deb5750600061038a565b6000610e13610e0d85610dfe6001610d8f565b610e08919061245d565b611355565b84611340565b90506000610e2082611411565b9050610e2c6001610d8f565b610e3690826124cb565b95945050505050565b60008363ffffffff168563ffffffff161015610e835760405162461bcd60e51b81526020600482015260036024820152624f4f4f60e81b60448201526064016104b4565b8363ffffffff168563ffffffff161415610fd357610e9f612270565b60048461ffff1661ffff8110610ec557634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090871614610fbc57620100035460405163d15e005360e01b81526001600160a01b039091169063d15e005390610f65907f00000000000000000000000000000000000000000000000000000000000000009060040161239b565b60206040518083038186803b158015610f7d57600080fd5b505afa158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb59190612305565b9150610fcd565b80602001516001600160d81b031691505b506111d1565b620100035460405163d15e005360e01b81526000916001600160a01b03169063d15e005390611026907f00000000000000000000000000000000000000000000000000000000000000009060040161239b565b60206040518083038186803b15801561103e57600080fd5b505afa158015611052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110769190612305565b90506000806110896004888589896115c6565b91509150816000015163ffffffff168763ffffffff1614156110ba5781602001516001600160d81b031693506111cd565b805163ffffffff888116911614156110e15780602001516001600160d81b031693506111cd565b600082602001516001600160d81b031682602001516001600160d81b0316111561114957600061113a676765c793fa10079d601b1b6107a885602001516001600160d81b031687602001516001600160d81b03166111d9565b90506111458161125a565b9150505b600061117a670de0b6b3a76400008551855161116591906124e2565b63ffffffff166111759190612489565b610a93565b905060006111888383610ddc565b90506111c785602001516001600160d81b0316826111ab670de0b6b3a764000090565b88516111b7908f6124e2565b63ffffffff166101bc9190612489565b96505050505b5050505b949350505050565b604080518082019091526002815261035360f41b6020820152600090826112135760405162461bcd60e51b81526004016104b491906123af565b506000611221600284612475565b9050828161123a676765c793fa10079d601b1b87612489565b611244919061245d565b6111d19190612475565b6000610a8c82846124cb565b60008061126c6002633b9aca00612475565b9050600061127a848361245d565b90508181101560405180604001604052806002815260200161343960f01b815250906112b95760405162461bcd60e51b81526004016104b491906123af565b506111d1633b9aca0082612475565b6112d0612270565b6001600160d81b038211156113105760405162461bcd60e51b81526004016104b4906020808252600490820152631f19189b60e11b604082015260600190565b506040805160608101825263ffffffff9390931683526001600160d81b0391909116602083015260019082015290565b6000610a8c83670de0b6b3a764000084611794565b6000670de0b6b3a764000082101561138357604051633621413760e21b8152600481018390526024016104b4565b6000611398670de0b6b3a76400008404611870565b670de0b6b3a7640000808202935090915083821c908114156113bb575050919050565b6706f05b59d3b200005b80156113fd57670de0b6b3a7640000828002049150671bc16d674ec8000082106113f5579283019260019190911c905b60011c6113c5565b505050919050565b6000610a8c838361194e565b6000680a688906bd8b000000821061143f57604051634a4f26f160e01b8152600481018390526024016104b4565b670de0b6b3a7640000604083901b04610a8c81611a10565b60006107da42610d8f565b6000806000888861ffff1661ffff811061148c57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff1615159383019390935290925090881614156114e757878592509250506115bb565b8461ffff168461ffff1611801561150f57506115046001866124a8565b61ffff168861ffff16145b1561151c57839150611520565b8491505b8161152c896001612437565b6115369190612521565b925061154287876112c8565b898461ffff1661ffff811061156757634e487b7160e01b600052603260045260246000fd5b82519101805460208401516040909401511515600160f81b026001600160f81b036001600160d81b03909516600160201b026001600160f81b031990921663ffffffff909416939093171792909216179055505b965096945050505050565b6115ce612270565b6115d6612270565b868461ffff1661ffff81106115fb57634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff808216808452600160201b83046001600160d81b03166020850152600160f81b90920460ff161515938301939093529093509087161061167a578563ffffffff16826000015163ffffffff1614156116665761178a565b8161167187876112c8565b9150915061178a565b8683611687866001612437565b6116919190612521565b61ffff1661ffff81106116b457634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905292506117395760408051606081018252885463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff1615159181019190915291505b815163ffffffff808816911611156117795760405162461bcd60e51b815260206004820152600360248201526213d31160ea1b60448201526064016104b4565b611785878786866120a2565b915091505b9550959350505050565b6000808060001985870985870292508281108382030391505080600014156117dd578382816117d357634e487b7160e01b600052601260045260246000fd5b0492505050610a8c565b83811061180757604051631dcf306360e21b815260048101829052602481018590526044016104b4565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b821061189057608091821c9161188d908261245d565b90505b600160401b82106118ae57604091821c916118ab908261245d565b90505b600160201b82106118cc57602091821c916118c9908261245d565b90505b6201000082106118e957601091821c916118e6908261245d565b90505b610100821061190557600891821c91611902908261245d565b90505b6010821061192057600491821c9161191d908261245d565b90505b6004821061193b57600291821c91611938908261245d565b90505b600282106109cf5761038a60018261245d565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106119925760405163698d9a0160e11b8152600481018290526024016104b4565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826119cc5780670de0b6b3a764000085040194505050505061038a565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615611a305768016a09e667f3bcc9090260401c5b6001603e1b821615611a4b576801306fe0a31b7152df0260401c5b6001603d1b821615611a66576801172b83c7d517adce0260401c5b6001603c1b821615611a815768010b5586cf9890f62a0260401c5b6001603b1b821615611a9c576801059b0d31585743ae0260401c5b6001603a1b821615611ab757680102c9a3e778060ee70260401c5b600160391b821615611ad25768010163da9fb33356d80260401c5b600160381b821615611aed57680100b1afa5abcbed610260401c5b600160371b821615611b085768010058c86da1c09ea20260401c5b600160361b821615611b23576801002c605e2e8cec500260401c5b600160351b821615611b3e57680100162f3904051fa10260401c5b600160341b821615611b59576801000b175effdc76ba0260401c5b600160331b821615611b7457680100058ba01fb9f96d0260401c5b600160321b821615611b8f5768010002c5cc37da94920260401c5b600160311b821615611baa576801000162e525ee05470260401c5b600160301b821615611bc55768010000b17255775c040260401c5b6001602f1b821615611be0576801000058b91b5bc9ae0260401c5b6001602e1b821615611bfb57680100002c5c89d5ec6d0260401c5b6001602d1b821615611c165768010000162e43f4f8310260401c5b6001602c1b821615611c3157680100000b1721bcfc9a0260401c5b6001602b1b821615611c4c5768010000058b90cf1e6e0260401c5b6001602a1b821615611c67576801000002c5c863b73f0260401c5b600160291b821615611c8257680100000162e430e5a20260401c5b600160281b821615611c9d576801000000b1721835510260401c5b600160271b821615611cb857680100000058b90c0b490260401c5b600160261b821615611cd35768010000002c5c8601cc0260401c5b600160251b821615611cee576801000000162e42fff00260401c5b600160241b821615611d095768010000000b17217fbb0260401c5b600160231b821615611d24576801000000058b90bfce0260401c5b600160221b821615611d3f57680100000002c5c85fe30260401c5b600160211b821615611d5a5768010000000162e42ff10260401c5b600160201b821615611d7557680100000000b17217f80260401c5b6380000000821615611d905768010000000058b90bfc0260401c5b6340000000821615611dab576801000000002c5c85fe0260401c5b6320000000821615611dc657680100000000162e42ff0260401c5b6310000000821615611de1576801000000000b17217f0260401c5b6308000000821615611dfc57680100000000058b90c00260401c5b6304000000821615611e175768010000000002c5c8600260401c5b6302000000821615611e32576801000000000162e4300260401c5b6301000000821615611e4d5768010000000000b172180260401c5b62800000821615611e67576801000000000058b90c0260401c5b62400000821615611e8157680100000000002c5c860260401c5b62200000821615611e9b5768010000000000162e430260401c5b62100000821615611eb557680100000000000b17210260401c5b62080000821615611ecf5768010000000000058b910260401c5b62040000821615611ee9576801000000000002c5c80260401c5b62020000821615611f0357680100000000000162e40260401c5b62010000821615611f1c5761b172600160401b010260401c5b618000821615611f34576158b9600160401b010260401c5b614000821615611f4c57612c5d600160401b010260401c5b612000821615611f645761162e600160401b010260401c5b611000821615611f7c57610b17600160401b010260401c5b610800821615611f945761058c600160401b010260401c5b610400821615611fac576102c6600160401b010260401c5b610200821615611fc457610163600160401b010260401c5b610100821615611fdb5760b1600160401b010260401c5b6080821615611ff1576059600160401b010260401c5b604082161561200757602c600160401b010260401c5b602082161561201d576016600160401b010260401c5b601082161561203357600b600160401b010260401c5b6008821615612049576006600160401b010260401c5b600482161561205f576003600160401b010260401c5b6002821615612075576001600160401b010260401c5b600182161561208b576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6120aa612270565b6120b2612270565b6000836120c0866001612437565b6120ca9190612521565b61ffff169050600060018561ffff16836120e4919061245d565b6120ee91906124cb565b905060005b60016120ff838561245d565b901c90508861211261ffff881683612542565b61ffff811061213157634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff81168252600160201b81046001600160d81b03166020830152600160f81b900460ff16151591810182905295506121885761218181600161245d565b92506120f3565b8861ffff871661219983600161245d565b6121a39190612542565b61ffff81106121c257634e487b7160e01b600052603260045260246000fd5b60408051606081018252919092015463ffffffff8082168352600160201b82046001600160d81b03166020840152600160f81b90910460ff161515928201929092528651909550898216911611801590819061222e5750846000015163ffffffff168963ffffffff1611155b156122395750612264565b80612250576122496001836124cb565b925061225e565b61225b82600161245d565b93505b506120f3565b50505094509492505050565b604080516060810182526000808252602082018190529181019190915290565b803563ffffffff811681146109cf57600080fd5b6000602082840312156122b5578081fd5b81356001600160a01b0381168114610a8c578182fd5b6000602082840312156122dc578081fd5b813561ffff81168114610a8c578182fd5b6000602082840312156122fe578081fd5b5035919050565b600060208284031215612316578081fd5b5051919050565b6000806040838503121561232f578081fd5b50508035926020909101359150565b600080600060608486031215612352578081fd5b505081359360208301359350604090920135919050565b6000806040838503121561237b578182fd5b61238483612290565b915061239260208401612290565b90509250929050565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b818110156123db578581018301518582016040015282016123bf565b818111156123ec5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061ffff80831681851680830382111561245457612454612556565b01949350505050565b6000821982111561247057612470612556565b500190565b6000826124845761248461256c565b500490565b60008160001904831182151516156124a3576124a3612556565b500290565b600061ffff838116908316818110156124c3576124c3612556565b039392505050565b6000828210156124dd576124dd612556565b500390565b600063ffffffff838116908316818110156124c3576124c3612556565b600061ffff8083168181141561251757612517612556565b6001019392505050565b600061ffff808416806125365761253661256c565b92169190910692915050565b6000826125515761255161256c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220d9146bc60940d6cc35512cc1a744781416ded4470e318736be8023d0c0497ee364736f6c63430008040033";

export class AaveRateOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveRateOracle> {
    return super.deploy(
      _aaveLendingPool,
      underlying,
      overrides || {}
    ) as Promise<AaveRateOracle>;
  }
  getDeployTransaction(
    _aaveLendingPool: string,
    underlying: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aaveLendingPool,
      underlying,
      overrides || {}
    );
  }
  attach(address: string): AaveRateOracle {
    return super.attach(address) as AaveRateOracle;
  }
  connect(signer: Signer): AaveRateOracle__factory {
    return super.connect(signer) as AaveRateOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveRateOracleInterface {
    return new utils.Interface(_abi) as AaveRateOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveRateOracle {
    return new Contract(address, _abi, signerOrProvider) as AaveRateOracle;
  }
}
