/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Periphery, PeripheryInterface } from "../Periphery";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AavePoolGetReserveNormalizedIncomeReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "CTokenExchangeRateReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "CanOnlyTradeIfUnlocked",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotLiquidate",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSettleBeforeMaturity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "DebugError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1",
        type: "int256",
      },
    ],
    name: "ExpectedOppositeSigns",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "ExpectedSqrtPriceZeroBeforeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "IRSNotionalAmountSpecifiedMustBeNonZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarginDelta",
    type: "error",
  },
  {
    inputs: [],
    name: "LidoGetPooledEthBySharesReturnedZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInBurn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "LiquidityDeltaMustBePositiveInMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginLessThanMinimum",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "fixedTokenDeltaUnbalanced",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "marginRequirement",
        type: "int256",
      },
    ],
    name: "MarginRequirementNotMetFCM",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    name: "NotEnoughFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "OOO",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyFCM",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMarginEngine",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerCanUpdatePosition",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVAMM",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNetZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "RocketPoolGetEthValueReturnedZero",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalExceedsCurrentMargin",
    type: "error",
  },
  {
    inputs: [],
    name: "closeToOrBeyondMaturity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IVAMM",
        name: "_vamm",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "MarginCap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    name: "WETHSetting",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "marginEngine",
        type: "address",
      },
    ],
    name: "getCurrentTick",
    outputs: [
      {
        internalType: "int24",
        name: "currentTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtRatioAX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtRatioBX96",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "notionalAmount",
        type: "uint256",
      },
    ],
    name: "getLiquidityForNotional",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "lpMarginCaps",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "",
        type: "address",
      },
    ],
    name: "lpMarginCumulatives",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "marginDelta",
            type: "int256",
          },
        ],
        internalType: "struct IPeriphery.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [
      {
        internalType: "int256",
        name: "positionMarginRequirement",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVAMM",
        name: "_vamm",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_lpMarginCapNew",
        type: "int256",
      },
    ],
    name: "setLPMarginCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "_marginEngine",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_tickUpper",
        type: "int24",
      },
    ],
    name: "settlePositionAndWithdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarginEngine",
            name: "marginEngine",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "marginDelta",
            type: "uint256",
          },
        ],
        internalType: "struct IPeriphery.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "int256",
        name: "_fixedTokenDelta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_variableTokenDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFeeIncurred",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_fixedTokenDeltaUnbalanced",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_marginRequirement",
        type: "int256",
      },
      {
        internalType: "int24",
        name: "_tickAfter",
        type: "int24",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarginEngine",
        name: "_marginEngine",
        type: "address",
      },
      {
        internalType: "int24",
        name: "_tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "_tickUpper",
        type: "int24",
      },
      {
        internalType: "int256",
        name: "_marginDelta",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "_fullyWithdraw",
        type: "bool",
      },
    ],
    name: "updatePositionMargin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027a5380380620027a583398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612709806200009c6000396000f3fe6080604052600436106100815760003560e01c8063040a5dc1146100865780631b44093d146100be5780632676938b146100e057806332e00daf1461011857806334907e34146101395780633fc8cef31461017c57806361b02452146101a9578063782085b5146101d6578063c19be59514610203578063f939640714610223575b600080fd5b34801561009257600080fd5b506100a66100a1366004611e2c565b610236565b60405160029190910b81526020015b60405180910390f35b3480156100ca57600080fd5b506100de6100d9366004611e49565b610328565b005b3480156100ec57600080fd5b506101006100fb366004611e75565b6104af565b6040516001600160801b0390911681526020016100b5565b61012b610126366004611f1a565b610502565b6040519081526020016100b5565b61014c610147366004611fc2565b610a77565b604080519687526020870195909552938501929092526060840152608083015260020b60a082015260c0016100b5565b34801561018857600080fd5b5060005461019c906001600160a01b031681565b6040516100b5919061207c565b3480156101b557600080fd5b5061012b6101c4366004611e2c565b60026020526000908152604090205481565b3480156101e257600080fd5b5061012b6101f1366004611e2c565b60016020526000908152604090205481565b34801561020f57600080fd5b506100de61021e366004612090565b610f0e565b6100de6102313660046120ec565b610f7b565b600080826001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027257600080fd5b505afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190612154565b9050806001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e557600080fd5b505afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d9190612171565b602001519392505050565b816001600160a01b0381166103755760405162461bcd60e51b815260206004820152600e60248201526d76616d6d2061646472207a65726f60901b60448201526064015b60405180910390fd5b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b057600080fd5b505afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190612154565b9050336001600160a01b038216146104345760405162461bcd60e51b815260206004820152600f60248201526e37b7363c903b30b6b69037bbb732b960891b604482015260640161036c565b6001600160a01b03841660009081526001602052604090205483146104a9576001600160a01b03841660009081526001602052604090819020849055517f359cd6003fbab20721d687a623408d04791a7b8de287826b2590c13db66f02fb906104a090869086906121f6565b60405180910390a15b50505050565b6000826001600160a01b0316846001600160a01b031611156104cf579192915b6104f86104f383600160601b6104e58888612225565b6001600160a01b031661143c565b61154f565b90505b9392505050565b6000610516826020015183604001516115bc565b600082600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190612154565b835160208501516040808701519051634904f4dd60e11b81529394506000936001600160a01b0390931692639209e9ba926105cc92339260040161224d565b61014060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190612294565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b15801561065c57600080fd5b505afa158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190612171565b805160208701519192506001600160a01b03161515906000906106b690611681565b905060006106c78860400151611681565b905082610761576000600289604001518a602001516106e69190612329565b6106f09190612386565b905060006106fd82611681565b6040516323fbaf6f60e11b81529091506001600160a01b038916906347f75ede9061072c90849060040161207c565b600060405180830381600087803b15801561074657600080fd5b505af115801561075a573d6000803e3d6000fd5b5050505050505b60a08801511515806107735750600034115b1561079657610796886000015189602001518a604001518b60a001516000610f7b565b60006107a783838b606001516104af565b602087015160808b015160009a509192506001600160801b03161515901561085c5760208a01516040808c01519051635c6651a760e11b81526001600160a01b038b169263b8cca34e92610803923392919088906004016123c0565b602060405180830381600087803b15801561081d57600080fd5b505af1158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085591906123f3565b98506108eb565b60208a01516040808c01519051631f2f089360e01b81526001600160a01b038b1692631f2f089392610896923392919088906004016123c0565b602060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e891906123f3565b98505b895160208b01516040808d01519051634904f4dd60e11b81526001600160a01b0390931692639209e9ba9261092492339260040161224d565b61014060405180830381600087803b15801561093f57600080fd5b505af1158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190612294565b965060008088602001516001600160801b03161190508a600001516001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a02919061240c565b8015610a1257508180610a125750805b15610a69576000338a8d600001518e602001518f60400151604051602001610a3e959493929190612429565b604051602081830303815290604052805190602001209050610a678a828b604001518686611a16565b505b505050505050505050919050565b600080600080600080610a9287608001518860a001516115bc565b600087600001516001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad157600080fd5b505afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b099190612154565b9050876080015160020b6000148015610b27575060a088015160020b155b15610c94576000816001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6757600080fd5b505afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190612469565b90506000826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610bdc57600080fd5b505afa158015610bf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c149190612171565b90506000828260200151610c289190612486565b90506000838360200151610c3c9190612329565b905062010deb19600283900b1215610c565762010deb1991505b610c6362010deb196124ce565b60020b8160020b1315610c8057610c7d62010deb196124ce565b90505b600291820b60808d0152900b60a08b015250505b60008860c001511180610ca75750600034115b15610cd257610cd2886000015189608001518a60a00151610ccb8c60c00151611b53565b6000610f7b565b6000886020015115610cf257610ceb8960400151611b53565b9050610d0b565b610cff8960400151611b53565b610d08906124f1565b90505b60006040518060a00160405280336001600160a01b031681526020018381526020018b606001516001600160a01b0316600014610d4c578b60600151610d8a565b8b6020015115610d7357610d6e60016c1fa71f3f5f68a90479ee3f8fec612225565b610d8a565b610d8a6b0816769404766de590afe04e600161250e565b6001600160a01b031681526020018b6080015160020b81526020018b60a0015160020b8152509050826001600160a01b03166367758e6e826040518263ffffffff1660e01b8152600401610e259190600060a08201905060018060a01b038084511683526020840151602084015280604085015116604084015250606083015160020b6060830152608083015160020b608083015292915050565b60a060405180830381600087803b158015610e3f57600080fd5b505af1158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e779190612539565b809950819a50829b50839c50849d505050505050826001600160a01b03166380a0f76c6040518163ffffffff1660e01b815260040160606040518083038186803b158015610ec457600080fd5b505afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc9190612171565b60200151935050505091939550919395565b60405163a725b96560e01b81526001600160a01b0385169063a725b96590610f3e9086908690869060040161224d565b600060405180830381600087803b158015610f5857600080fd5b505af1158015610f6c573d6000803e3d6000fd5b505050506104a9848383600060015b604051634904f4dd60e11b81526000906001600160a01b03871690639209e9ba90610fae9033908990899060040161224d565b61014060405180830381600087803b158015610fc957600080fd5b505af1158015610fdd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110019190612294565b90506000866001600160a01b0316632495a5996040518163ffffffff1660e01b815260040160206040518083038186803b15801561103e57600080fd5b505afa158015611052573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110769190612154565b9050821561108f57816040015161108c906124f1565b93505b3415611137576000546001600160a01b0382811691161415611137576000805460408051630d0e30db60e41b8152905134936001600160a01b039093169263d0e30db09285926004808301939282900301818588803b1580156110f157600080fd5b505af1158015611105573d6000803e3d6000fd5b50611120935050506001600160a01b03841690503383611bbd565b61112981611b53565b6111339086612579565b9450505b60008413156111ea57611160333061114e87611c18565b6001600160a01b038516929190611c6a565b806001600160a01b031663095ea7b38861117987611c18565b6040518363ffffffff1660e01b81526004016111969291906121f6565b602060405180830381600087803b1580156111b057600080fd5b505af11580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e8919061240c565b505b604051637717797f60e01b8152336004820152600287810b602483015286900b6044820152606481018590526001600160a01b03881690637717797f90608401600060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b5050604051634904f4dd60e11b81526001600160a01b038a169250639209e9ba915061128c9033908a908a9060040161224d565b61014060405180830381600087803b1580156112a757600080fd5b505af11580156112bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112df9190612294565b91506000876001600160a01b031663884287526040518163ffffffff1660e01b815260040160206040518083038186803b15801561131c57600080fd5b505afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611354919061240c565b90506000886001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561139157600080fd5b505afa1580156113a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c99190612154565b90508180156113e55750600084602001516001600160801b0316115b1561143157600033828b8b8b604051602001611405959493929190612429565b60405160208183030381529060405280519060200120905061142f82828760400151600180611a16565b505b505050505050505050565b6000808060001985870985870292508281108382030391505080600014156114ac57600084116114a15760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b604482015260640161036c565b5082900490506104fb565b8084116114e65760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015260640161036c565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006001600160801b038211156115b85760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161036c565b5090565b8060020b8260020b126115f75760405162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015260640161036c565b62010deb19600283900b12156116355760405162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015260640161036c565b61164262010deb196124ce565b60020b8160020b131561167d5760405162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015260640161036c565b5050565b60008060008360020b12611698578260020b6116a5565b8260020b6116a5906124f1565b90506116b462010deb196124ce565b60020b8111156116ea5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640161036c565b6000600182166116fe57600160801b611710565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615611745576080611740826ffff97272373d413259a46990580e213a6125ba565b901c90505b600482161561176f57608061176a826ffff2e50f5f656932ef12357cf3c7fdcc6125ba565b901c90505b6008821615611799576080611794826fffe5caca7e10e4e61c3624eaa0941cd06125ba565b901c90505b60108216156117c35760806117be826fffcb9843d60f6159c9db58835c9266446125ba565b901c90505b60208216156117ed5760806117e8826fff973b41fa98c081472e6896dfb254c06125ba565b901c90505b6040821615611817576080611812826fff2ea16466c96a3843ec78b326b528616125ba565b901c90505b608082161561184157608061183c826ffe5dee046a99a2a811c461f1969c30536125ba565b901c90505b61010082161561186c576080611867826ffcbe86c7900a88aedcffc83b479aa3a46125ba565b901c90505b610200821615611897576080611892826ff987a7253ac413176f2b074cf7815e546125ba565b901c90505b6104008216156118c25760806118bd826ff3392b0822b70005940c7a398e4b70f36125ba565b901c90505b6108008216156118ed5760806118e8826fe7159475a2c29b7443b29c7fa6e889d96125ba565b901c90505b611000821615611918576080611913826fd097f3bdfd2022b8845ad8f792aa58256125ba565b901c90505b61200082161561194357608061193e826fa9f746462d870fdf8a65dc1f90e061e56125ba565b901c90505b61400082161561196e576080611969826f70d869a156d2a1b890bb3df62baf32f76125ba565b901c90505b618000821615611999576080611994826f31be135f97d08fd981231505542fcfa66125ba565b901c90505b620100008216156119c55760806119c0826f09aa508b5b7a84e1c677de54f3e99bc96125ba565b901c90505b60008460020b13156119e0576119dd816000196125d9565b90505b6119ee600160201b826125ed565b156119fa5760016119fd565b60005b611a0e9060ff16602083901c612601565b949350505050565b8015611a99576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611a52908490612619565b909155505060008481526003602090815260408083208690556001600160a01b0388168352600290915281208054859290611a8e908490612579565b90915550611aea9050565b8115611aea576000848152600360209081526040808320546001600160a01b038916845260029092528220805491929091611ad5908490612619565b90915550506000848152600360205260408120555b6001600160a01b0385166000908152600160209081526040808320546002909252909120541315611b4c5760405162461bcd60e51b815260206004820152600c60248201526b1b1c0818d85c081b1a5b5a5d60a21b604482015260640161036c565b5050505050565b60006001600160ff1b038211156115b85760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161036c565b611c138363a9059cbb60e01b8484604051602401611bdc9291906121f6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ca2565b505050565b6000808212156115b85760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161036c565b6040516001600160a01b03808516602483015283166044820152606481018290526104a99085906323b872dd60e01b90608401611bdc565b6000611cce83836040518060400160405280600781526020016629aa261032b93960c91b815250611d23565b805190915015611c135780806020019051810190611cec919061240c565b611c135760405162461bcd60e51b815260206004820152600860248201526714d5130819985a5b60c21b604482015260640161036c565b6060833b611d625760405162461bcd60e51b815260206004820152600c60248201526b1b9bdb8b58dbdb9d1c9858dd60a21b604482015260640161036c565b600080856001600160a01b0316600086604051611d7f9190612684565b60006040518083038185875af1925050503d8060008114611dbc576040519150601f19603f3d011682016040523d82523d6000602084013e611dc1565b606091505b5091509150611dd1828286611ddb565b9695505050505050565b60608315611dea5750816104fb565b825115611dfa5782518084602001fd5b8160405162461bcd60e51b815260040161036c91906126a0565b6001600160a01b0381168114611e2957600080fd5b50565b600060208284031215611e3e57600080fd5b81356104fb81611e14565b60008060408385031215611e5c57600080fd5b8235611e6781611e14565b946020939093013593505050565b600080600060608486031215611e8a57600080fd5b8335611e9581611e14565b92506020840135611ea581611e14565b929592945050506040919091013590565b60405161014081016001600160401b0381118282101715611ee757634e487b7160e01b600052604160045260246000fd5b60405290565b8060020b8114611e2957600080fd5b8035611f0781611eed565b919050565b8015158114611e2957600080fd5b600060c08284031215611f2c57600080fd5b60405160c081016001600160401b0381118282101715611f5c57634e487b7160e01b600052604160045260246000fd5b6040528235611f6a81611e14565b81526020830135611f7a81611eed565b60208201526040830135611f8d81611eed565b6040820152606083810135908201526080830135611faa81611f0c565b608082015260a0928301359281019290925250919050565b600060e08284031215611fd457600080fd5b60405160e081016001600160401b038111828210171561200457634e487b7160e01b600052604160045260246000fd5b604052823561201281611e14565b8152602083013561202281611f0c565b602082015260408381013590820152606083013561203f81611e14565b6060820152608083013561205281611eed565b608082015261206360a08401611efc565b60a082015260c083013560c08201528091505092915050565b6001600160a01b0391909116815260200190565b600080600080608085870312156120a657600080fd5b84356120b181611e14565b935060208501356120c181611e14565b925060408501356120d181611eed565b915060608501356120e181611eed565b939692955090935050565b600080600080600060a0868803121561210457600080fd5b853561210f81611e14565b9450602086013561211f81611eed565b9350604086013561212f81611eed565b925060608601359150608086013561214681611f0c565b809150509295509295909350565b60006020828403121561216657600080fd5b81516104fb81611e14565b60006060828403121561218357600080fd5b604051606081016001600160401b03811182821017156121b357634e487b7160e01b600052604160045260246000fd5b60405282516121c181611e14565b815260208301516121d181611eed565b6020820152604083015160ff811681146121ea57600080fd5b60408201529392505050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b03838116908316818110156122455761224561220f565b039392505050565b6001600160a01b03939093168352600291820b6020840152900b604082015260600190565b8051611f0781611f0c565b80516001600160801b0381168114611f0757600080fd5b600061014082840312156122a757600080fd5b6122af611eb6565b6122b883612272565b81526122c66020840161227d565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b60008160020b8360020b6000821282627fffff0382138115161561234f5761234f61220f565b82627fffff190382128116156123675761236761220f565b50019392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b8061239d5761239d612370565b627fffff198214600019821416156123b7576123b761220f565b90059392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b60006020828403121561240557600080fd5b5051919050565b60006020828403121561241e57600080fd5b81516104fb81611f0c565b6001600160601b0319606096871b8116825294861b851660148201529290941b909216602882015260e891821b603c82015291901b603f82015260420190565b60006020828403121561247b57600080fd5b81516104fb81611eed565b60008160020b8360020b6000811281627fffff19018312811516156124ad576124ad61220f565b81627fffff0183138116156124c4576124c461220f565b5090039392505050565b60008160020b627fffff198114156124e8576124e861220f565b60000392915050565b6000600160ff1b8214156125075761250761220f565b5060000390565b60006001600160a01b038281168482168083038211156125305761253061220f565b01949350505050565b600080600080600060a0868803121561255157600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b600080821280156001600160ff1b038490038513161561259b5761259b61220f565b600160ff1b83900384128116156125b4576125b461220f565b50500190565b60008160001904831182151516156125d4576125d461220f565b500290565b6000826125e8576125e8612370565b500490565b6000826125fc576125fc612370565b500690565b600082198211156126145761261461220f565b500190565b60008083128015600160ff1b8501841216156126375761263761220f565b6001600160ff1b03840183138116156126525761265261220f565b50500390565b60005b8381101561267357818101518382015260200161265b565b838111156104a95750506000910152565b60008251612696818460208701612658565b9190910192915050565b60208152600082518060208401526126bf816040850160208701612658565b601f01601f1916919091016040019291505056fea2646970667358221220c4f913ce7069fe523b8e8f2b67836042f3cfc58f740206f593b216f9bb27d1a164736f6c63430008090033";

export class Periphery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Periphery> {
    return super.deploy(_weth, overrides || {}) as Promise<Periphery>;
  }
  getDeployTransaction(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  attach(address: string): Periphery {
    return super.attach(address) as Periphery;
  }
  connect(signer: Signer): Periphery__factory {
    return super.connect(signer) as Periphery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryInterface {
    return new utils.Interface(_abi) as PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Periphery {
    return new Contract(address, _abi, signerOrProvider) as Periphery;
  }
}
