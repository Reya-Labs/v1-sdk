/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Periphery, PeripheryInterface } from "../Periphery";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marginEngineAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isMint",
            type: "bool",
          },
        ],
        internalType: "struct Periphery.MintOrBurnParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "mintOrBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marginEngineAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "notional",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct Periphery.SwapPeripheryParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e24806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630ebc11a91461003b578063add915c914610050575b600080fd5b61004e610049366004610b8d565b610063565b005b61004e61005e366004610ae3565b6102e4565b80602001516001600160a01b0316336001600160a01b0316146100a15760405162461bcd60e51b815260040161009890610c79565b60405180910390fd5b60006100b0826000015161044f565b905060008260400151156100c9575060608201516100da565b82606001516100d790610d81565b90505b6000826001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011557600080fd5b505afa158015610129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014d9190610a92565b905060006040518060a00160405280336001600160a01b0316815260200184815260200186608001516001600160a01b03166000146101905786608001516101ce565b8660400151156101b7576101b260016c1fa71f3f5f68a90479ee3f8fec610d24565b6101ce565b6101ce6b0816769404766de590afe04e6001610cae565b6001600160a01b031681526020018660a0015160020b6000146101f5578660a001516101fe565b6101fe84610d60565b60020b81526020018660c0015160020b60001461021f578660c00151610221565b835b600290810b909152604080516333bac73760e11b815283516001600160a01b0390811660048301526020850151602483015291840151821660448201526060840151830b6064820152608084015190920b6084830152919250908516906367758e6e9060a401608060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d99190610aae565b505050505050505050565b80602001516001600160a01b0316336001600160a01b0316146103195760405162461bcd60e51b815260040161009890610c79565b6000610328826000015161044f565b9050600061033983604001516104d0565b9050600061034a84606001516104d0565b9050600061035d838387608001516108da565b90508460a00151156103dd57602085015160408087015160608801519151635c6651a760e11b81526001600160a01b0388169363b8cca34e936103a69391928790600401610c46565b600060405180830381600087803b1580156103c057600080fd5b505af11580156103d4573d6000803e3d6000fd5b50505050610448565b602085015160408087015160608801519151631f2f089360e01b81526001600160a01b03881693631f2f08939361041a9391928790600401610c46565b600060405180830381600087803b15801561043457600080fd5b505af11580156102d9573d6000803e3d6000fd5b5050505050565b6000808290506000816001600160a01b031663e098372c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190610a76565b949350505050565b60008060008360020b126104e7578260020b6104f4565b8260020b6104f490610d81565b905061050362010deb19610d60565b60020b8111156105395760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610098565b60006001821661054d57600160801b61055f565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b03169050600282161561059457608061058f826ffff97272373d413259a46990580e213a610d05565b901c90505b60048216156105be5760806105b9826ffff2e50f5f656932ef12357cf3c7fdcc610d05565b901c90505b60088216156105e85760806105e3826fffe5caca7e10e4e61c3624eaa0941cd0610d05565b901c90505b601082161561061257608061060d826fffcb9843d60f6159c9db58835c926644610d05565b901c90505b602082161561063c576080610637826fff973b41fa98c081472e6896dfb254c0610d05565b901c90505b6040821615610666576080610661826fff2ea16466c96a3843ec78b326b52861610d05565b901c90505b608082161561069057608061068b826ffe5dee046a99a2a811c461f1969c3053610d05565b901c90505b6101008216156106bb5760806106b6826ffcbe86c7900a88aedcffc83b479aa3a4610d05565b901c90505b6102008216156106e65760806106e1826ff987a7253ac413176f2b074cf7815e54610d05565b901c90505b61040082161561071157608061070c826ff3392b0822b70005940c7a398e4b70f3610d05565b901c90505b61080082161561073c576080610737826fe7159475a2c29b7443b29c7fa6e889d9610d05565b901c90505b611000821615610767576080610762826fd097f3bdfd2022b8845ad8f792aa5825610d05565b901c90505b61200082161561079257608061078d826fa9f746462d870fdf8a65dc1f90e061e5610d05565b901c90505b6140008216156107bd5760806107b8826f70d869a156d2a1b890bb3df62baf32f7610d05565b901c90505b6180008216156107e85760806107e3826f31be135f97d08fd981231505542fcfa6610d05565b901c90505b6201000082161561081457608061080f826f09aa508b5b7a84e1c677de54f3e99bc9610d05565b901c90505b6202000082161561083f57608061083a826e5d6af8dedb81196699c329225ee604610d05565b901c90505b62040000821615610869576080610864826d2216e584f5fa1ea926041bedfe98610d05565b901c90505b6208000082161561089157608061088c826b048a170391f7dc42444e8fa2610d05565b901c90505b60008460020b13156108ac576108a981600019610cf1565b90505b6108ba600160201b82610d4c565b156108c65760016108c9565b60005b6104c89060ff16602083901c610cd9565b6000826001600160a01b0316846001600160a01b031611156108fa579192915b61092361091e83600160601b6109108888610d24565b6001600160a01b031661092d565b610a40565b90505b9392505050565b60008080600019858709858702925082811083820303915050806000141561099d57600084116109925760405162461bcd60e51b815260206004820152601060248201526f4469766973696f6e206279207a65726f60801b6044820152606401610098565b508290049050610926565b8084116109d75760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b6044820152606401610098565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b806001600160801b0381168114610a5657600080fd5b919050565b80358015158114610a5657600080fd5b8035610a5681610ddf565b600060208284031215610a87578081fd5b815161092681610dc7565b600060208284031215610aa3578081fd5b815161092681610ddf565b60008060008060808587031215610ac3578283fd5b505082516020840151604085015160609095015191969095509092509050565b600060c08284031215610af4578081fd5b60405160c081016001600160401b0381118282101715610b2257634e487b7160e01b83526041600452602483fd5b6040528235610b3081610dc7565b81526020830135610b4081610dc7565b60208201526040830135610b5381610ddf565b60408201526060830135610b6681610ddf565b606082015260808381013590820152610b8160a08401610a5b565b60a08201529392505050565b600060e08284031215610b9e578081fd5b60405160e081016001600160401b0381118282101715610bcc57634e487b7160e01b83526041600452602483fd5b6040528235610bda81610dc7565b81526020830135610bea81610dc7565b6020820152610bfb60408401610a5b565b6040820152606083013560608201526080830135610c1881610dc7565b6080820152610c2960a08401610a6b565b60a0820152610c3a60c08401610a6b565b60c08201529392505050565b6001600160a01b03949094168452600292830b6020850152910b60408301526001600160801b0316606082015260800190565b6020808252818101527f6d73672e73656e646572206d7573742062652074686520726563697069656e74604082015260600190565b60006001600160a01b03828116848216808303821115610cd057610cd0610d9b565b01949350505050565b60008219821115610cec57610cec610d9b565b500190565b600082610d0057610d00610db1565b500490565b6000816000190483118215151615610d1f57610d1f610d9b565b500290565b60006001600160a01b0383811690831681811015610d4457610d44610d9b565b039392505050565b600082610d5b57610d5b610db1565b500690565b60008160020b627fffff19811415610d7a57610d7a610d9b565b9003919050565b6000600160ff1b821415610d9757610d97610d9b565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0381168114610ddc57600080fd5b50565b8060020b8114610ddc57600080fdfea2646970667358221220f60627b99bbdecca88a521047a862fba08fc54296d2afcd1d62294062e52936e64736f6c63430008040033";

export class Periphery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Periphery> {
    return super.deploy(overrides || {}) as Promise<Periphery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Periphery {
    return super.attach(address) as Periphery;
  }
  connect(signer: Signer): Periphery__factory {
    return super.connect(signer) as Periphery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeripheryInterface {
    return new utils.Interface(_abi) as PeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Periphery {
    return new Contract(address, _abi, signerOrProvider) as Periphery;
  }
}
