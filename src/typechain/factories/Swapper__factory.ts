/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Swapper, SwapperInterface } from "../Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "VAMMAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isFT",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "amountSpecified",
            type: "int256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
          {
            internalType: "bool",
            name: "isUnwind",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isTrader",
            type: "bool",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct IVAMM.SwapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ef806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637a73e9a514610030575b600080fd5b61004361003e3660046100fc565b610045565b005b6040516388c1b92560e01b81526001600160a01b038316906388c1b92590610071908490600401610218565b606060405180830381600087803b15801561008b57600080fd5b505af115801561009f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100c391906101eb565b5050505050565b80356100d5816102a1565b919050565b803580151581146100d557600080fd5b8035600281900b81146100d557600080fd5b600080828403610120811215610110578283fd5b833561011b816102a1565b9250610100601f198201811315610130578283fd5b60405191508082016001600160401b038111838210171561015f57634e487b7160e01b84526041600452602484fd5b60405261016e602086016100ca565b825261017c604086016100da565b602083015260608501356040830152610197608086016100ca565b60608301526101a860a086016100da565b60808301526101b960c086016100da565b60a08301526101ca60e086016100ea565b60c08301526101da8186016100ea565b60e083015250809150509250929050565b6000806000606084860312156101ff578081fd5b8351925060208401519150604084015190509250925092565b60006101008201905060018060a01b03808451168352602084015115156020840152604084015160408401528060608501511660608401525060808301511515608083015260a083015161027060a084018215159052565b5060c083015161028560c084018260020b9052565b5060e083015161029a60e084018260020b9052565b5092915050565b6001600160a01b03811681146102b657600080fd5b5056fea2646970667358221220b6bb90272cd14ae2a85650003e8be3f60ba537a0f2f220415258cef1292f03b064736f6c63430008040033";

export class Swapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Swapper> {
    return super.deploy(overrides || {}) as Promise<Swapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Swapper {
    return super.attach(address) as Swapper;
  }
  connect(signer: Signer): Swapper__factory {
    return super.connect(signer) as Swapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapperInterface {
    return new utils.Interface(_abi) as SwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Swapper {
    return new Contract(address, _abi, signerOrProvider) as Swapper;
  }
}
